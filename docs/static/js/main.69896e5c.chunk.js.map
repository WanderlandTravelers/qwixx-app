{"version":3,"sources":["serviceWorker.js","components/ColorRow.js","components/StrikesRow.js","App.js","Theme.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ColorRow","props","score","onClick","revealScore","color","reverse","row","showScore","marks","disabled","classes","makeStyles","theme","palette","blue","green","red","yellow","backgroundColor","main","padding","spacing","paddingLeft","number","cursor","borderRadius","marginLeft","numberContent","textAlign","width","liveNumber","light","disabledNumber","disabledNumberContent","textDecoration","x","fontWeight","square","circle","breakpoints","down","openLock","fontSize","typography","marginBottom","transform","lock","scoreContent","paddingRight","block","blockRed","borderColor","blockYellow","blockGreen","blockBlue","blackText","useStyles","fiveXLocked","filter","value","length","capitalizedColor","charAt","toUpperCase","slice","Grid","container","direction","justifyContent","alignItems","item","xs","key","className","map","selected","i","isLock","clsx","grey","scoreContainer","marginRight","border","scoreTop","borderBottom","scoreBottom","stop","reset","history","minusIcon","strike","strikeEmpty","strikesContainer","strikesLabel","strikesLabelX","dark","flexGrow","flexShrink","blockWhite","strikesScore","totalScore","StrikesRow","onReset","onEndGame","onHistory","strikes","showStrikes","showFinal","justify","wrap","icon","faCircleStop","faRedo","faTrophy","faMinus","scoring","diceIndex","blankState","Array","fill","blueScore","disabledDice","endGameDialogOpen","historyDialogOpen","greenScore","redScore","showBlue","showGreen","showRed","showYellow","yellowScore","QuixxScoreCard","cloneDeep","handleClick","index","toggleDisabled","numMarks","element","lastIndexOf","setState","handleClickStrikes","handleReset","e","skipConfirm","confirm","handleDelete","JSON","parse","localStorage","getItem","splice","setItem","stringify","handleView","alert","savedState","removeItem","this","addEventListener","getTotalScore","handleRecordScore","won","scores","push","Date","toISOString","game","Dialog","fullScreen","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","TableContainer","component","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","date","toLocaleDateString","toLocaleTimeString","Visibility","DeleteForever","Component","withStyles","cardSubTitle","display","disclaimer","margin","fiveXTop","borderTopLeftRadius","borderTopRightRadius","float","fiveXBottom","borderBottomLeftRadius","borderBottomRightRadius","borderTop","height","marginTop","paddingBottom","React","memo","createMuiTheme","darker","ReactDOM","render","ThemeProvider","Theme","CssBaseline","App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.69896e5c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport OpenLockIcon from '@material-ui/icons/LockOpenOutlined';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = (color) => makeStyles((theme) => {\n  const { blue, green, red, yellow } = theme.palette;\n\n  return ({\n    marks: {\n      backgroundColor: theme.palette[color].main,\n      padding: theme.spacing(),\n      paddingLeft: `env(safe-area-inset-left)`,\n    },\n    number: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(),\n      marginLeft: theme.spacing(),\n      padding: theme.spacing(),\n    },\n    numberContent: {\n      textAlign: 'center',\n      width: '100%',\n    },\n    liveNumber: {\n      backgroundColor: theme.palette[color].light,\n      color: theme.palette[color].main,\n    },\n    disabledNumber: {\n      backgroundColor: 'transparent',\n      color: 'black',\n    },\n    disabledNumberContent: {\n      textDecoration: 'line-through',\n    },\n    x: {\n      fontWeight: 'bold',\n      color: 'black',\n    },\n    square: {\n      borderRadius: theme.spacing(),\n    },\n    circle: {\n      borderRadius: theme.spacing(20),\n      [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(),\n      },\n    },\n    openLock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n      transform: 'rotate(45deg)',\n    },\n    lock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n    },\n    scoreContent: {\n      paddingRight: theme.spacing(2),\n    },\n    block: {\n      backgroundColor: 'white',\n      cursor: 'pointer',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n    },\n    blockRed: {\n      borderColor: red.main,\n      backgroundColor: red.light,\n      color: red.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockYellow: {\n      borderColor: yellow.main,\n      backgroundColor: yellow.light,\n      color: yellow.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockGreen: {\n      borderColor: green.main,\n      backgroundColor: green.light,\n      color: green.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockBlue: {\n      borderColor: blue.main,\n      backgroundColor: blue.light,\n      color: blue.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blackText: {\n      color: 'black',\n    },\n  });\n});\n\nexport default function ColorRow(props) {\n  const {\n    score,\n    onClick,\n    revealScore,\n    color,\n    reverse = false,\n    row,\n    showScore,\n  } = props;\n  const [marks, disabled] = row;\n  const classes = useStyles(color)();\n  const fiveXLocked = marks.filter(value => value).length < 5;\n  const capitalizedColor = color.charAt(0).toUpperCase() + color.slice(1);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs key='0' className={classes.marks}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          {marks.map((selected, i) => {\n            const isLock = i + 1 === marks.length;\n\n            return i < 10\n              ? <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i)}\n                >\n                  <div className={clsx(classes.numberContent, disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? <span className={classes.x}>X</span>\n                      : reverse\n                        ? marks.length - i\n                        : i + 2\n                    }\n                  </div>\n                </Grid>\n              : <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i, isLock)}\n                >\n                  <div className={clsx(\n                    classes.numberContent,\n                    !fiveXLocked && disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? isLock\n                        ? <LockIcon className={classes.lock} />\n                        : <span className={classes.x}>X</span>\n                      : isLock\n                        ? <OpenLockIcon className={classes.openLock} />\n                        : reverse\n                          ? marks.length - i\n                          : i + 2\n                    }\n                  </div>\n                </Grid>;\n          })}\n        </Grid>\n      </Grid>\n      <Grid item xs={1} key='1'\n        className={clsx(\n          classes.block,\n          classes[`block${capitalizedColor}`],\n          showScore && classes.blackText\n        )}\n        onClick={() => revealScore(`show${capitalizedColor}`)}\n      >\n        <div className={classes.scoreContent}>{score}</div>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faRedo, faCircleStop, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => {\n  const { grey } = theme.palette;\n\n  return ({\n    scoreContainer: {\n      marginRight: theme.spacing(2),\n    },\n    score: {\n      backgroundColor: 'white',\n      border: `2px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing(),\n      paddingLeft: theme.spacing()/2,\n      paddingRight: theme.spacing()/2,\n      fontSize: 18,\n    },\n    scoreTop: {\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      textAlign: 'center',\n      padding: theme.spacing(0.75),\n    },\n    scoreBottom: {\n      padding: theme.spacing()/2,\n      textAlign: 'center',\n    },\n    stop: {\n      color: 'white',\n      marginRight: theme.spacing(2),\n    },\n    reset: {\n      color: 'white',\n      marginRight: theme.spacing(2),\n    },\n    history: {\n      color: 'white',\n      marginRight: theme.spacing(2),\n    },\n    minusIcon: {\n      color: 'white',\n      marginLeft: theme.spacing(30),\n    },\n    strike: {\n      backgroundColor: 'white',\n      border: `1px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing()/2,\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: `5px ${theme.spacing(1.9)}px`,\n    },\n    strikeEmpty: {\n      color: 'White',\n    },\n    strikesContainer: {\n      width: \"100%\",\n    },\n    strikesLabel: {\n      fontSize: 18,\n      textAlign: 'center',\n    },\n    strikesLabelX: {\n      fontWeight: 'bold',\n      color: 'red',\n    },\n    block: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      cursor: 'pointer',\n      flexGrow: 1,\n      flexShrink: 0,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      width: 64\n    },\n    blockWhite: {\n      color: 'white',\n    },\n    blackText: {\n      color: 'black',\n    },\n    strikesScore: {\n      marginRight: theme.spacing(3),\n    },\n    totalScore: {\n      marginRight: theme.spacing(1.5),\n    },\n  });\n});\n\nfunction StrikesRow(props) {\n  const { onClick, onReset, onEndGame, onHistory, strikes, showStrikes, showFinal, revealScore, strikesScore, totalScore } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid container justify='space-between' alignItems='center' wrap='nowrap' className={classes.row}>\n      <Grid item className={classes.strikesContainer}>\n        <Grid container spacing={1} justify='space-around' alignItems='center' wrap='nowrap'>\n          <FontAwesomeIcon icon={faCircleStop} className={classes.stop} onClick={onEndGame} />\n          <FontAwesomeIcon icon={faRedo} className={classes.reset} onClick={onReset} />\n          <FontAwesomeIcon icon={faTrophy} className={classes.history} onClick={onHistory} />\n          <FontAwesomeIcon icon={faMinus} className={classes.minusIcon} />\n          {strikes.map((strike, i) => (\n            <Grid item\n              key={i}\n              onClick={() => onClick(i)}\n            >\n              <div className={clsx(classes.strike, !strike ? classes.strikeEmpty : null)}>\n                X\n              </div>\n            </Grid>\n          ))}\n          <Grid item \n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.strikesScore,\n              showStrikes && classes.blackText,\n            )}\n            onClick={() => revealScore('showStrikes')}\n          >\n            {strikesScore}\n          </Grid>\n          <Grid item \n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.totalScore,\n              showFinal && classes.blackText\n            )}\n            onClick={() => revealScore('showFinal')}\n          >\n            {totalScore}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default StrikesRow;","import React, { Component } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Paper, useMediaQuery, Table, TableContainer, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport { DeleteForever, Visibility } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport ColorRow from './components/ColorRow';\nimport StrikesRow from './components/StrikesRow';\n\nconst scoring = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];\nconst styles = (theme) => ({\n  cardSubTitle: {\n    color: theme.palette.grey.main,\n    display: 'inline-block',\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  disclaimer: {\n    textAlign: 'center',\n    margin: `${theme.spacing(2)} auto`,\n    fontSize: 14,\n  },\n  fiveXTop: {\n    border: '1px solid',\n    borderBottom: 0,\n    borderTopLeftRadius: theme.spacing(2),\n    borderTopRightRadius: theme.spacing(2),\n    display: 'inline-block',\n    float: 'right',\n    fontSize: 14,\n    marginRight: theme.spacing(0.75),\n    textAlign: 'center',\n    width: 130,\n  },\n  fiveXBottom: {\n    border: '1px solid',\n    borderBottomLeftRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    borderTop: 0,\n    display: 'inline-block',\n    float: 'right',\n    height: theme.spacing(),\n    marginBottom: theme.spacing(),\n    marginRight: theme.spacing(0.75),\n    marginTop: -theme.spacing(2),\n    width: 130,\n  },\n  game: {\n    backgroundColor: '#282c34',\n    height: '100%',\n    paddingBottom: `env(safe-area-inset-bottom)`,\n  },\n});\n\nconst diceIndex = { red: 2, yellow: 3, green: 4, blue: 5 };\nconst blankState = {\n  blue: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  blueScore: 0,\n  disabledDice: new Array(6).fill(false),\n  endGameDialogOpen: false,\n  historyDialogOpen: false,\n  green: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  greenScore: 0,\n  red: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  redScore: 0,\n  showBlue: true, \n  showFinal: true,\n  showGreen: true, \n  showRed: true, \n  showStrikes: true,\n  showYellow: true,\n  strikes: new Array(4).fill(false),\n  strikesScore: 0,\n  yellow: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  yellowScore: 0,\n}\n\nclass QuixxScoreCard extends Component {\n  state = cloneDeep(blankState);\n\n  componentDidMount() {\n    // if there is a saved state, reload it\n    let savedState = localStorage.getItem('QwixxState');\n    if (savedState) {\n      savedState = JSON.parse(savedState);\n      localStorage.removeItem('QwixxState');\n      this.setState(savedState);\n    }\n    \n    // save the state if the user navagates away or refreshes\n    window.addEventListener('pagehide', () => {\n      console.log('saving state');\n      localStorage.setItem('QwixxState', JSON.stringify(this.state));\n    });\n  }\n  \n  /**\n   * Handles clicks for the colored number rows\n   * @param {String} color The color of the row\n   * @param {Number} index The index of the clicked square\n   * @param {Boolean} isLock Whether or not the square clicked is a lock\n  */\n  handleClick = (color, index, isLock) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n\n    // if disabled do nothing\n    if (disabled[index]) {\n      return;\n    }\n\n    // Disable a dice if a lock is marked\n    // really means toggle the state of both lock and dice when they are in the state\n    // this must be done before marks is modified\n    if (isLock && (\n      (!marks[index] && !disabledDice[diceIndex[color]]) ||\n      (marks[index] && disabledDice[diceIndex[color]])\n    )) {\n      this.toggleDisabled(color);\n    }\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const numMarks = marks.filter(value => value).length - (marks[11] && !marks[10] ? 1 : 0);\n    const score = scoring[numMarks];\n\n    // disable all before the index and enable all after\n    disabled = disabled.map((element, i) => {\n      // Check lock section first, then check the rest\n      return (i === marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n    });\n\n    this.setState({\n      [color]: [marks, disabled],\n      [`${color}Score`]: score,\n    });\n  }\n\n  /**\n   * Handles clicks for the strike row \n   * @param {Number} index The index of the Strike that was clicked\n   */\n  handleClickStrikes = (index) => {\n    const marks = this.state.strikes;\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const score = marks.filter(value => value).length * 5;\n\n    this.setState({\n      strikes: marks,\n      strikesScore: score,\n    });\n  }\n\n  handleReset = (e, skipConfirm) => {\n    // TODO: Use proper dialog\n    if (skipConfirm || window.confirm('Are you sure you want to reset the card?'))\n    {\n      this.setState(cloneDeep(blankState));\n    }\n  }\n\n  handleDelete = (e, i) => {\n    // TODO: Use proper dialog\n    if (window.confirm('Are you sure you want to delete the record?'))\n    {\n      var history = JSON.parse(localStorage.getItem(\"QuixxHistory\"));\n      history.splice(i, 1);\n      localStorage.setItem(\"QuixxHistory\", JSON.stringify(history));\n      // Cause the dialog to refresh\n      this.setState({historyDialogOpen: true});\n    }\n  }\n\n  handleView = (e, i) => {\n    // TODO: Show the game state from the history\n    window.alert(\"Stay tuned for this feature!\");\n  }\n\n  toggleDisabled = (color) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n    const index = diceIndex[color];\n\n    // toggle the specified dice\n    disabledDice[index] = !disabledDice[index];\n\n    // disable or enable the entries of a row\n    if (disabledDice[index]) {\n      disabled = disabled.map(() => true);\n\n      // don't disable the lock if it is marked\n      if (marks[marks.length - 1]) {\n        disabled[disabled.length - 1] = false;\n      }\n    } else {\n      const numMarks = marks.filter(value => value).length;\n      disabled = disabled.map((element, i) => {\n        // Check lock section first, then check the rest\n        return (i >= marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n      });\n    }\n\n    this.setState({ \n      disabledDice,\n      [color]: [marks, disabled],\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    // const theme = useTheme();\n    // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const {\n      red,\n      yellow,\n      green,\n      blue,\n      blueScore = 0,\n      greenScore = 0,\n      redScore = 0,\n      showBlue,\n      showGreen,\n      showRed,\n      showYellow,\n      showFinal,\n      showStrikes,\n      strikes,\n      strikesScore = 0,\n      yellowScore = 0,\n      endGameDialogOpen,\n      historyDialogOpen,\n    } = this.state;\n\n    const getTotalScore = () => redScore + yellowScore + greenScore + blueScore - strikesScore;\n  \n    const handleLoss = (e) => handleRecordScore(e, false);\n    const handleWin = (e) => handleRecordScore(e, true);\n\n    const handleEndGame = () => {\n      this.setState({endGameDialogOpen: true});\n    };\n    \n    const handleRecordScore = (e, won) => {\n      this.setState({endGameDialogOpen: false});\n      const scores = JSON.parse(localStorage.getItem(\"QuixxHistory\") || '[]');\n      scores.push({\n        'date': (new Date()).toISOString(),\n        'score': getTotalScore(),\n        'won': won,\n        'state': cloneDeep(this.state),\n      });\n      localStorage.setItem('QuixxHistory', JSON.stringify(scores));\n      this.handleReset(e, true);\n    };\n\n    return (\n      <Grid\n        className={classes.game}\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showRed}\n          score={redScore}\n          color='red'\n          row={red}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showYellow}\n          score={yellowScore}\n          color='yellow'\n          row={yellow}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showGreen}\n          score={greenScore}\n          color='green'\n          reverse\n          row={green}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showBlue}\n          score={blueScore}\n          color='blue'\n          reverse\n          row={blue}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <StrikesRow\n          strikes={strikes}\n          onEndGame={handleEndGame}\n          onReset={this.handleReset}\n          onHistory={() => this.setState({historyDialogOpen: true})}\n          onClick={(i) => this.handleClickStrikes(i)}\n          showFinal={showFinal}\n          showStrikes={showStrikes}\n          totalScore={getTotalScore()}\n          strikesScore={-strikesScore}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n\n        <Dialog\n          fullScreen={true}\n          open={endGameDialogOpen}\n          onClose={() => this.setState({endGameDialogOpen: false})}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">Game Over</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you win?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.setState({endGameDialogOpen: false})} color=\"primary\">\n              Close\n            </Button>\n            <Button onClick={handleLoss} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={handleWin} color=\"primary\" autoFocus>\n              Yes!\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          fullScreen={true}\n          open={historyDialogOpen}\n          onClose={() => this.setState({historyDialogOpen: false})}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">Game History</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Date</TableCell>\n                      <TableCell align=\"right\">Score</TableCell>\n                      <TableCell align=\"right\">Win?</TableCell>\n                      <TableCell align=\"right\">View</TableCell>\n                      <TableCell align=\"right\">Delete</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {JSON.parse(localStorage.getItem('QuixxHistory') || '[]').map((row, i) => (\n                      <TableRow key={i}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {new Date(row.date).toLocaleDateString()} {new Date(row.date).toLocaleTimeString()}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.score}</TableCell>\n                        <TableCell align=\"right\">{row.won ? 'X' : ''}</TableCell>\n                        <TableCell align=\"right\"><Visibility onClick={(e) => this.handleView(e, i)} /></TableCell>\n                        <TableCell align=\"right\"><DeleteForever onClick={(e) => this.handleDelete(e, i)} /></TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={() => this.setState({historyDialogOpen: false})} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(React.memo(QuixxScoreCard));\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, green, grey, red, yellow } from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n  typography: {\n    fontSize: 28,\n  },\n  palette: {\n    grey: {\n      light: grey[200],\n      main: grey[500],\n      dark: grey[700],\n      darker: grey[900],\n    }, \n    blue: {\n      light: blue[100],\n      main: blue[700],\n    },\n    green: {\n      light: green[100],\n      main: green[700],\n    },\n    red: {\n      light: red[100],\n      main: red[700],\n    },\n    yellow: {\n      light: yellow[100],\n      main: yellow[700],\n    }\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}