{"version":3,"sources":["serviceWorker.js","components/NumberRow.js","components/ColorRows.js","components/StrikesRow.js","App.js","Theme.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","useStyles","color","lockSection","makeStyles","theme","row","backgroundColor","palette","main","borderRadius","spacing","marginBottom","padding","number","cursor","position","width","numberContent","float","textAlign","liveNumber","light","disabledNumber","disabledNumberContent","textDecoration","x","fontWeight","openLock","fontSize","typography","transform","lock","square","circle","breakpoints","down","FreeSection","onClick","reverse","classes","marks","disabled","className","Grid","container","justify","map","selected","i","item","key","clsx","length","LockSection","fiveXLocked","filter","value","isLock","blue","green","grey","red","yellow","section","flexGrow","block","border","dark","flexShrink","blockRed","borderColor","blockYellow","blockGreen","blockBlue","blackText","free","score","ColorRows","props","blueScore","greenScore","redScore","yellowScore","revealScore","showBlue","showGreen","showRed","showYellow","scoreContainer","marginRight","paddingLeft","paddingRight","scoreTop","borderBottom","scoreBottom","stop","reset","history","minusIcon","marginLeft","strike","strikeEmpty","strikesContainer","strikesLabel","strikesLabelX","blockWhite","strikesScore","totalScore","StrikesRow","onReset","strikes","showStrikes","showFinal","React","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","recordScore","e","won","scores","JSON","parse","localStorage","getItem","push","Date","toISOString","setItem","stringify","alignItems","wrap","icon","faCircleStop","faRedo","faTrophy","faMinus","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","scoring","diceIndex","blankState","Array","fill","disabledDice","QuixxScoreCard","cloneDeep","startingGameWidth","startingGameHeight","getScaler","windowWidth","innerWidth","windowHeight","innerHeight","gameHeight","scaler","scalerH","scalerW","handleClick","index","toggleDisabled","numMarks","element","lastIndexOf","setState","handleClickStrikes","handleReset","skipConfirm","confirm","savedState","removeItem","this","addEventListener","wrapperStyles","left","marginTop","gameWrapper","style","Component","withStyles","cardTitleRow","display","cardTitle","cardSubTitle","disclaimer","margin","fiveXTop","borderTopLeftRadius","borderTopRightRadius","fiveXBottom","borderBottomLeftRadius","borderBottomRightRadius","borderTop","height","right","paper","paddingTop","createMuiTheme","darker","ReactDOM","render","ThemeProvider","Theme","CssBaseline","App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3cf6273a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport OpenLockIcon from '@material-ui/icons/LockOpenOutlined';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = (color, lockSection) => makeStyles((theme) => ({\n  row: {\n    backgroundColor: theme.palette[color].main,\n    borderRadius: theme.spacing(),\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(),\n  },\n  number: {\n    cursor: 'pointer',\n    padding: theme.spacing(),\n    // paddingTop: theme.spacing(2),\n    // paddingBottom: theme.spacing(2),\n    position: 'relative',\n    //width: `calc((100% / ${lockSection ? '2' : '10'}) - ${theme.spacing(2)}px)`,\n    width: 56,\n  },\n  numberContent: {\n    float: 'left',\n    textAlign: 'center',\n    width: '100%',\n  },\n  liveNumber: {\n    backgroundColor: theme.palette[color].light,\n    color: theme.palette[color].main,\n  },\n  disabledNumber: {\n    backgroundColor: 'transparent',\n    color: 'black',\n  },\n  disabledNumberContent: {\n    textDecoration: 'line-through',\n  },\n  x: {\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  openLock: {\n    fontSize: theme.typography.fontSize,\n    marginBottom: -4,\n    transform: 'rotate(45deg)',\n  },\n  lock: {\n    fontSize: theme.typography.fontSize,\n    marginBottom: -4,\n  },\n  square: {\n    borderRadius: theme.spacing(),\n  },\n  circle: {\n    borderRadius: theme.spacing(20),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(),\n    },\n  },\n}));\n\nfunction FreeSection({ color, onClick, reverse, row }) {\n  const classes = useStyles(color)();\n  const [marks, disabled] = row;\n\n  return (\n    <div className={classes.row}>\n      <Grid container justify='space-around'>\n        {marks.map((selected, i) => {\n\n          if (i < 10) {\n            return (\n              <Grid \n                item\n                key={color + i}\n                className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber )}\n                onClick={() => onClick(color, i)}\n              >\n                <div className={clsx(classes.numberContent, disabled[i] && !selected && classes.disabledNumberContent)}>\n                  {selected \n                    ? <span className={classes.x}>X</span>\n                    : reverse\n                      ? marks.length - i\n                      : i + 2\n                  }\n                </div>\n              </Grid>\n            );\n          }\n\n          return null;\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nfunction LockSection({ color, onClick, reverse, row }) {\n  const classes = useStyles(color, true)();\n  const [marks, disabled] = row;\n  const fiveXLocked = marks.filter(value => value).length < 5;\n\n  return (\n    <div className={classes.row}>\n      <Grid container justify='space-around'>\n        {marks.map((selected, i) => {\n          const isLock = i + 1 === marks.length;\n\n          if (i > 9) {\n            return (\n              <Grid \n                item\n                key={color + i}\n                className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber )}\n                onClick={() => onClick(color, i, isLock)}\n              >\n                <div className={clsx(\n                  classes.numberContent,\n                  !fiveXLocked && disabled[i] && !selected && classes.disabledNumberContent)}>\n                  {selected \n                    ? isLock\n                      ? <LockIcon className={classes.lock} />\n                      : <span className={classes.x}>X</span>\n                    : isLock\n                      ? <OpenLockIcon className={classes.openLock} />\n                      : reverse\n                        ? marks.length - i\n                        : i + 2\n                  }\n                </div>\n              </Grid>\n            );\n          }\n\n          return null;\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nexport {\n  FreeSection,\n  LockSection,\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FreeSection, LockSection } from './NumberRow';\n\nconst useStyles = makeStyles((theme) => {\n  const { blue, green, grey, red, yellow } = theme.palette;\n  \n  return ({\n    section: {\n      flexGrow: 1,\n    },\n    block: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      cursor: 'pointer',\n      flexGrow: 1,\n      flexShrink: 0,\n      marginBottom: theme.spacing(1.81),\n      padding: theme.spacing(1.8),\n      textAlign: 'center',\n      width: 64\n    },\n    blockRed: {\n      borderColor: red.main,\n      backgroundColor: red.light,\n      color: red.light,\n    },\n    blockYellow: {\n      borderColor: yellow.main,\n      backgroundColor: yellow.light,\n      color: yellow.light,\n    },\n    blockGreen: {\n      borderColor: green.main,\n      backgroundColor: green.light,\n      color: green.light,\n    },\n    blockBlue: {\n      borderColor: blue.main,\n      backgroundColor: blue.light,\n      color: blue.light,\n    },\n    blackText: {\n      color: 'black',\n    },\n    free: {\n      width: '75%',\n    },\n    lock: {\n      width: '16.66666666%',\n    },\n    score: {\n      width: '8.33333333%',\n    },\n  });\n});\n\nexport default function ColorRows(props) {\n  const classes = useStyles();\n  const {\n      blue,\n      green,\n      red,\n      yellow,\n      blueScore,\n      greenScore,\n      redScore,\n      yellowScore,\n      onClick,\n      revealScore,\n      showBlue,\n      showGreen,\n      showRed,\n      showYellow,\n  } = props;\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item className={clsx(classes.section, classes.free)}>\n        <FreeSection\n          color={'red'}\n          onClick={onClick}\n          row={red}\n        />\n        <FreeSection\n          color={'yellow'}\n          onClick={onClick}\n          row={yellow}\n        />\n        <FreeSection\n          color={'green'}\n          onClick={onClick}\n          row={green}\n          reverse\n        />\n        <FreeSection\n          color={'blue'}\n          onClick={onClick}\n          row={blue}\n          reverse\n        />\n      </Grid>\n      <Grid item className={clsx(classes.section, classes.lock)}>\n        <LockSection\n          color={'red'}\n          onClick={onClick}\n          row={red}\n        />\n        <LockSection\n          color={'yellow'}\n          onClick={onClick}\n          row={yellow}\n        />\n        <LockSection\n          color={'green'}\n          onClick={onClick}\n          row={green}\n          reverse\n        />\n        <LockSection\n          color={'blue'}\n          onClick={onClick}\n          row={blue}\n          reverse\n        />\n      </Grid>\n      <Grid item className={clsx(classes.section, classes.score)}>\n        <Grid item\n          className={clsx(\n            classes.block,\n            classes.blockRed,\n            showRed && classes.blackText\n          )}\n          onClick={() => revealScore('showRed')}\n        >\n          {redScore}\n        </Grid>\n        <Grid item\n          className={clsx(\n            classes.block,\n            classes.blockYellow,\n            showYellow && classes.blackText\n          )}\n          onClick={() => revealScore('showYellow')}\n        >\n          {yellowScore}\n        </Grid>\n        <Grid item\n          className={clsx(\n            classes.block,\n            classes.blockGreen,\n            showGreen && classes.blackText\n          )}\n          onClick={() => revealScore('showGreen')}\n        > \n          {greenScore}\n        </Grid>\n        <Grid item\n          className={clsx(\n            classes.block,\n            classes.blockBlue,\n            showBlue && classes.blackText,\n          )}\n          onClick={() => revealScore('showBlue')}\n        >\n          {blueScore}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faRedo, faCircleStop, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => {\n  const { grey } = theme.palette;\n\n  return ({\n    scoreContainer: {\n      marginRight: theme.spacing(2),\n    },\n    score: {\n      backgroundColor: 'white',\n      border: `2px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing(),\n      paddingLeft: theme.spacing()/2,\n      paddingRight: theme.spacing()/2,\n      fontSize: 18,\n    },\n    scoreTop: {\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      textAlign: 'center',\n      padding: theme.spacing(0.75),\n    },\n    scoreBottom: {\n      padding: theme.spacing()/2,\n      textAlign: 'center',\n    },\n    stop: {\n      marginRight: theme.spacing(2),\n    },\n    reset: {\n      marginRight: theme.spacing(2),\n    },\n    history: {\n      marginRight: theme.spacing(2),\n    },\n    minusIcon: {\n      marginLeft: theme.spacing(30),\n    },\n    strike: {\n      backgroundColor: 'white',\n      border: `1px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing()/2,\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: `5px ${theme.spacing(1.9)}px`,\n    },\n    strikeEmpty: {\n      color: 'White',\n    },\n    strikesContainer: {\n      width: \"100%\",\n    },\n    strikesLabel: {\n      fontSize: 18,\n      textAlign: 'center',\n    },\n    strikesLabelX: {\n      fontWeight: 'bold',\n      color: 'red',\n    },\n    block: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      cursor: 'pointer',\n      flexGrow: 1,\n      flexShrink: 0,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      width: 64\n    },\n    blockWhite: {\n      color: 'white',\n    },\n    blackText: {\n      color: 'black',\n    },\n    strikesScore: {\n      marginRight: theme.spacing(3),\n    },\n    totalScore: {\n      marginRight: theme.spacing(1.5),\n    },\n  });\n});\n\nfunction StrikesRow(props) {\n  const { onClick, onReset, strikes, showStrikes, showFinal, revealScore, strikesScore, totalScore } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleEndGame = () => {\n    setOpen(true);\n  };\n\n  const recordScore = (e, won) => {\n    setOpen(false);\n    const scores = JSON.parse(localStorage.getItem(\"scores\") || '[]');\n    scores.push({'date': (new Date()).toISOString(), 'score': totalScore, 'won': won});\n    localStorage.setItem('scores', JSON.stringify(scores));\n    onReset(e, true);\n  };\n  const handleLoss = (e) => recordScore(e, false);\n  const handleWin = (e) => recordScore(e, true);\n\n  return (\n    <Grid container justify='space-between' alignItems='center' wrap='nowrap' className={classes.row}>\n      <Grid item className={classes.strikesContainer}>\n        <Grid container spacing={1} justify='space-around' alignItems='center' wrap='nowrap'>\n          <FontAwesomeIcon icon={faCircleStop} className={classes.stop} onClick={handleEndGame} />\n          <FontAwesomeIcon icon={faRedo} className={classes.reset} onClick={onReset} />\n          <FontAwesomeIcon icon={faTrophy} className={classes.history}/>\n          <FontAwesomeIcon icon={faMinus} className={classes.minusIcon}/>\n          {strikes.map((strike, i) => (\n            <Grid item\n              key={i}\n              onClick={() => onClick(i)}\n            >\n              <div className={clsx(classes.strike, !strike ? classes.strikeEmpty : null)}>\n                X\n              </div>\n            </Grid>\n          ))}\n          <Grid item \n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.strikesScore,\n              showStrikes && classes.blackText,\n            )}\n            onClick={() => revealScore('showStrikes')}\n          >\n            {strikesScore}\n          </Grid>\n          <Grid item \n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.totalScore,\n              showFinal && classes.blackText\n            )}\n            onClick={() => revealScore('showFinal')}\n          >\n            {totalScore}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Game Over\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Did you win?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleLoss} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={handleWin} color=\"primary\" autoFocus>\n            Yes!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n\nexport default StrikesRow;","import React, { Component } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\n\nimport ColorRows from './components/ColorRows';\nimport StrikesRow from './components/StrikesRow';\n\nconst scoring = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];\nconst gameWidth = 1000;\nconst gameHeight = 405; // calculated after rendering and here for reference\n\nconst styles = (theme) => ({\n  cardTitleRow: {\n    display: 'flex',\n    alignItems: 'flex-end',\n  },\n  cardTitle: {\n    color: theme.palette.grey.dark,\n    display: 'inline-block',\n    fontWeight: 'bold',\n    marginRight: theme.spacing(4),\n  },\n  cardSubTitle: {\n    color: theme.palette.grey.main,\n    display: 'inline-block',\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  disclaimer: {\n    textAlign: 'center',\n    margin: `${theme.spacing(2)} auto`,\n    fontSize: 14,\n  },\n  fiveXTop: {\n    border: '1px solid',\n    borderBottom: 0,\n    borderTopLeftRadius: theme.spacing(2),\n    borderTopRightRadius: theme.spacing(2),\n    display: 'inline-block',\n    float: 'right',\n    fontSize: 14,\n    marginRight: theme.spacing(0.75),\n    textAlign: 'center',\n    width: 130,\n  },\n  fiveXBottom: {\n    border: '1px solid',\n    borderBottomLeftRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    borderTop: 0,\n    display: 'inline-block',\n    float: 'right',\n    height: theme.spacing(),\n    marginBottom: theme.spacing(),\n    marginRight: theme.spacing(0.75),\n    marginTop: -theme.spacing(2),\n    width: 130,\n  },\n  gameWrapper: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    width: gameWidth,\n    margin: 'auto',\n  },\n  paper: {\n    backgroundColor: theme.palette.grey.light,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    marginLeft: theme.spacing(4),\n    marginRight: theme.spacing(4),\n    marginBottom: theme.spacing(),\n  },\n});\n\nconst diceIndex = { red: 2, yellow: 3, green: 4, blue: 5 };\nconst blankState = {\n  blue: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  blueScore: 0,\n  disabledDice: new Array(6).fill(false),\n  green: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  greenScore: 0,\n  red: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  redScore: 0,\n  showBlue: true, \n  showFinal: true,\n  showGreen: true, \n  showRed: true, \n  showStrikes: true,\n  showYellow: true,\n  strikes: new Array(4).fill(false),\n  strikesScore: 0,\n  yellow: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  yellowScore: 0,\n}\n\nclass QuixxScoreCard extends Component {\n  state = cloneDeep(blankState);\n  startingGameWidth = gameWidth;\n  startingGameHeight = gameHeight;\n\n  componentDidMount() {\n    // if there is a saved state, reload it\n    let savedState = localStorage.getItem('QwixxAppState');\n    if (savedState) {\n      savedState = JSON.parse(savedState);\n      localStorage.removeItem('QwixxAppState');\n      this.setState(savedState);\n    }\n\n    // save the state if the user navagates away or refreshes\n    window.addEventListener('pagehide', () => {\n      console.log('saving state');\n      localStorage.setItem('QwixxAppState', JSON.stringify(this.state));\n    });\n\n    // Rescale the card to fit on the screen if the size of the screen changes\n    window.addEventListener('resize', () => {\n      this.setState({ scaler: this.getScaler() });\n    });\n\n    // set the initial scaler for the game\n    this.setState({ scaler: this.getScaler() });\n  }\n\n  /**\n   * Calculates a scale factor for how to scale the card and dice so they\n   * always fit on the screen regardless of orientation. Scaler is always 1\n   * unless the height < width, then we scale based on the height of the screen\n   */\n  getScaler = () => {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    //const gameHeight = document.getElementById('game-wrapper').clientHeight;\n    const gameHeight = this.startingGameHeight;\n\n    // scaler starts at 1 which means no scaling needed\n    let scaler = 1;\n\n    // do we even need to scale?\n    console.log(windowHeight);\n    console.log(gameHeight);\n\n    const scalerH = windowHeight / gameHeight;\n    const scalerW = windowWidth / gameWidth;\n\n    // take the smaller scaler because that one is more important\n    scaler = scalerH < scalerW ? scalerH : scalerW\n\n    // shrink just a little to add some padding around the edges\n    scaler = scaler * 0.98;\n\n    return scaler;\n  }\n\n  /**\n   * Handles clicks for the colored number rows\n   * @param {String} color The color of the row\n   * @param {Number} index The index of the clicked square\n   * @param {Boolean} isLock Whether or not the square clicked is a lock\n   */\n  handleClick = (color, index, isLock) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n\n    // if disabled do nothing\n    if (disabled[index]) {\n      return;\n    }\n\n    // Disable a dice if a lock is marked\n    // really means toggle the state of both lock and dice when they are in the state\n    // this must be done before marks is modified\n    if (isLock && (\n      (!marks[index] && !disabledDice[diceIndex[color]]) ||\n      (marks[index] && disabledDice[diceIndex[color]])\n    )) {\n      this.toggleDisabled(color);\n    }\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const numMarks = marks.filter(value => value).length - (marks[11] && !marks[10] ? 1 : 0);\n    const score = scoring[numMarks];\n\n    // disable all before the index and enable all after\n    disabled = disabled.map((element, i) => {\n      // Check lock section first, then check the rest\n      return (i === marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n    });\n\n    this.setState({\n      [color]: [marks, disabled],\n      [`${color}Score`]: score,\n    });\n  }\n\n  /**\n   * Handles clicks for the strike row \n   * @param {Number} index The index of the Strike that was clicked\n   */\n  handleClickStrikes = (index) => {\n    const marks = this.state.strikes;\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const score = marks.filter(value => value).length * 5;\n\n    this.setState({\n      strikes: marks,\n      strikesScore: score,\n    });\n  }\n\n  handleReset = (e, skipConfirm) => {\n    if (skipConfirm || window.confirm('Are you sure you want to reset the card?'))\n    {\n      this.setState(cloneDeep(blankState));\n    }\n  }\n\n  toggleDisabled = (color) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n    const index = diceIndex[color];\n\n    // toggle the specified dice\n    disabledDice[index] = !disabledDice[index];\n\n    // disable or enable the entries of a row\n    if (disabledDice[index]) {\n      disabled = disabled.map(() => true);\n\n      // don't disable the lock if it is marked\n      if (marks[marks.length - 1]) {\n        disabled[disabled.length - 1] = false;\n      }\n    } else {\n      const numMarks = marks.filter(value => value).length;\n      disabled = disabled.map((element, i) => {\n        // Check lock section first, then check the rest\n        return (i >= marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n      });\n    }\n\n    this.setState({ \n      disabledDice,\n      [color]: [marks, disabled],\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {\n      blueScore = 0,\n      greenScore = 0,\n      redScore = 0,\n      scaler = 1,\n      showBlue,\n      showGreen,\n      showRed,\n      showYellow,\n      showFinal,\n      showStrikes,\n      strikes,\n      strikesScore = 0,\n      yellowScore = 0,\n    } = this.state;\n\n    let wrapperStyles;\n    if (scaler !== 1) {\n      wrapperStyles = {\n        transform: `translate(-50%) scale(${scaler})`,\n        left: `50%`,\n        marginTop: 8 - (gameHeight - (gameHeight * scaler)) / 2\n      };\n    };\n\n    return (\n      <>\n        <div \n          id='game-wrapper'\n          className={classes.gameWrapper}\n          style={wrapperStyles}\n        >\n          <ColorRows {...this.state}\n            onClick={this.handleClick}\n            showBlue={showBlue}\n            showGreen={showGreen}\n            showRed={showRed}\n            showYellow={showYellow}\n            blueScore={blueScore}\n            greenScore={greenScore}\n            redScore={redScore}\n            yellowScore={yellowScore}\n            revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n          />\n          <StrikesRow\n            strikes={strikes}\n            onReset={this.handleReset}\n            onClick={(i) => this.handleClickStrikes(i)}\n            showFinal={showFinal}\n            showStrikes={showStrikes}\n            totalScore={redScore + yellowScore + greenScore + blueScore - strikesScore}\n            strikesScore={-strikesScore}\n            revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(QuixxScoreCard);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, green, grey, red, yellow } from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n  typography: {\n    fontSize: 28,\n  },\n  palette: {\n    grey: {\n      light: grey[200],\n      main: grey[500],\n      dark: grey[700],\n      darker: grey[900],\n    }, \n    blue: {\n      light: blue[100],\n      main: blue[700],\n    },\n    green: {\n      light: green[100],\n      main: green[700],\n    },\n    red: {\n      light: red[100],\n      main: red[700],\n    },\n    yellow: {\n      light: yellow[100],\n      main: yellow[700],\n    }\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}