{"version":3,"sources":["serviceWorker.js","components/ColorRow.js","components/StrikesRow.js","components/dialogs/EndGame.js","components/dialogs/Reset.js","components/dialogs/History.js","App.js","Theme.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ColorRow","props","score","onClick","revealScore","color","reverse","row","showScore","marks","disabled","classes","makeStyles","theme","palette","blue","green","red","yellow","backgroundColor","main","padding","spacing","paddingLeft","number","cursor","borderRadius","marginLeft","numberContent","textAlign","width","liveNumber","light","disabledNumber","disabledNumberContent","textDecoration","x","fontWeight","square","circle","breakpoints","down","openLock","fontSize","typography","marginBottom","transform","lock","scoreContent","paddingRight","block","blockRed","borderColor","blockYellow","blockGreen","blockBlue","blackText","useStyles","fiveXLocked","filter","value","length","capitalizedColor","charAt","toUpperCase","slice","Grid","container","direction","justifyContent","alignItems","item","xs","key","className","map","selected","i","isLock","clsx","grey","scoreContainer","marginRight","border","icon","minusIcon","float","moves","movesEmpty","visibility","movesRed","movesYellow","movesGreen","movesBlue","strike","dark","strikeEmpty","blockWhite","StrikesRow","onClickUndo","onReset","onEndGame","onHistory","strikes","showStrikes","showFinal","strikesScore","totalScore","numbers","strikesContainer","faCircleStop","stop","faRedo","reset","faTrophy","history","includes","toReversed","faMinus","EndGameDialog","open","onClose","onLoss","onWin","Dialog","fullScreen","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ResetDialog","table","HistoryDialog","onViewHistory","onDeleteHistory","qwixxHistory","scores","wins","won","averageScore","Math","round","reduce","a","b","highScore","max","winRate","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","Date","date","toLocaleDateString","toLocaleTimeString","Visibility","DeleteForever","scoring","diceIndex","blankState","Array","fill","blueScore","disabledDice","endGameDialogOpen","resetDialogOpen","historyDialogOpen","greenScore","redScore","showBlue","showGreen","showRed","showYellow","yellowScore","QuixxScoreCard","cloneDeep","handleClick","index","shift","unshift","toggleDisabled","numMarks","element","lastIndexOf","setState","handleClickUndo","handleClickStrikes","handleReset","handleDelete","confirm","getQwixxHistory","splice","setQwixxHistory","handleView","alert","JSON","parse","localStorage","getItem","setItem","stringify","savedState","removeItem","this","addEventListener","getTotalScore","handleRecordScore","e","push","toISOString","game","Component","withStyles","cardSubTitle","display","flexGrow","disclaimer","margin","fiveXTop","borderBottom","borderTopLeftRadius","borderTopRightRadius","fiveXBottom","borderBottomLeftRadius","borderBottomRightRadius","borderTop","height","marginTop","paddingBottom","React","memo","createTheme","darker","ReactDOM","render","ThemeProvider","Theme","CssBaseline","App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.05ad6d89.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport OpenLockIcon from '@material-ui/icons/LockOpenOutlined';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = (color) => makeStyles((theme) => {\n  const { blue, green, red, yellow } = theme.palette;\n\n  return ({\n    marks: {\n      backgroundColor: theme.palette[color].main,\n      padding: theme.spacing(),\n      paddingLeft: `env(safe-area-inset-left)`,\n    },\n    number: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(),\n      marginLeft: theme.spacing(),\n      padding: theme.spacing(),\n    },\n    numberContent: {\n      textAlign: 'center',\n      width: '100%',\n    },\n    liveNumber: {\n      backgroundColor: theme.palette[color].light,\n      color: theme.palette[color].main,\n    },\n    disabledNumber: {\n      backgroundColor: 'transparent',\n      color: 'black',\n    },\n    disabledNumberContent: {\n      textDecoration: 'line-through',\n    },\n    x: {\n      fontWeight: 'bold',\n      color: 'black',\n    },\n    square: {\n      borderRadius: theme.spacing(),\n    },\n    circle: {\n      borderRadius: theme.spacing(20),\n      [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(),\n      },\n    },\n    openLock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n      transform: 'rotate(45deg)',\n    },\n    lock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n    },\n    scoreContent: {\n      paddingRight: theme.spacing(2),\n    },\n    block: {\n      backgroundColor: 'white',\n      cursor: 'pointer',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n    },\n    blockRed: {\n      borderColor: red.main,\n      backgroundColor: red.light,\n      color: red.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockYellow: {\n      borderColor: yellow.main,\n      backgroundColor: yellow.light,\n      color: yellow.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockGreen: {\n      borderColor: green.main,\n      backgroundColor: green.light,\n      color: green.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockBlue: {\n      borderColor: blue.main,\n      backgroundColor: blue.light,\n      color: blue.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blackText: {\n      color: 'black',\n    },\n  });\n});\n\nexport default function ColorRow(props) {\n  const {\n    score,\n    onClick,\n    revealScore,\n    color,\n    reverse = false,\n    row,\n    showScore,\n  } = props;\n  const [marks, disabled] = row;\n  const classes = useStyles(color)();\n  const fiveXLocked = marks.filter(value => value).length < 5;\n  const capitalizedColor = color.charAt(0).toUpperCase() + color.slice(1);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs key='0' className={classes.marks}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          {marks.map((selected, i) => {\n            const isLock = i + 1 === marks.length;\n\n            return i < 10\n              ? <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i)}\n                >\n                  <div className={clsx(classes.numberContent, disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? <span className={classes.x}>X</span>\n                      : reverse\n                        ? marks.length - i\n                        : i + 2\n                    }\n                  </div>\n                </Grid>\n              : <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i, isLock)}\n                >\n                  <div className={clsx(\n                    classes.numberContent,\n                    !fiveXLocked && disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? isLock\n                        ? <LockIcon className={classes.lock} />\n                        : <span className={classes.x}>X</span>\n                      : isLock\n                        ? <OpenLockIcon className={classes.openLock} />\n                        : reverse\n                          ? marks.length - i\n                          : i + 2\n                    }\n                  </div>\n                </Grid>;\n          })}\n        </Grid>\n      </Grid>\n      <Grid item xs={1} key='1'\n        className={clsx(\n          classes.block,\n          classes[`block${capitalizedColor}`],\n          showScore && classes.blackText\n        )}\n        onClick={() => revealScore(`show${capitalizedColor}`)}\n      >\n        <div className={classes.scoreContent}>{score}</div>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faRedo, faCircleStop, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => {\n  const { grey, blue, green, red, yellow } = theme.palette;\n\n  return ({\n    scoreContainer: {\n      marginRight: theme.spacing(2),\n    },\n    score: {\n      backgroundColor: 'white',\n      border: `2px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing(),\n      paddingLeft: theme.spacing()/2,\n      paddingRight: theme.spacing()/2,\n      fontSize: 18,\n    },\n    icon: {\n      color: 'white',\n      width: '100% !important',\n    },\n    minusIcon: {\n      float: 'right',\n      marginRight: theme.spacing(2),\n      width: 'auto !important',\n    },\n    moves: {\n      backgroundColor: 'white',\n      border: `1px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing()/2,\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: `5px ${theme.spacing(1.9)}px`,\n      textAlign: 'center',\n    },\n    movesEmpty: {\n      visibility: 'hidden',\n    },\n    movesRed: {\n      backgroundColor: red.light,\n    },\n    movesYellow: {\n      backgroundColor: yellow.light,\n    },\n    movesGreen: {\n      backgroundColor: green.light,\n    },\n    movesBlue: {\n      backgroundColor: blue.light,\n    },\n    strike: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: theme.spacing(1),\n      fontSize: 28,\n      textAlign: 'center',\n    },\n    strikeEmpty: {\n      color: 'White',\n    },\n    block: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      cursor: 'pointer',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n    },\n    blockWhite: {\n      color: 'white',\n    },\n    blackText: {\n      color: 'black',\n    },\n  });\n});\n\nfunction StrikesRow(props) {\n  const { onClick, onClickUndo, onReset, onEndGame, onHistory, moves, strikes, showStrikes, showFinal, revealScore, strikesScore, totalScore } = props;\n  const classes = useStyles();\n  const numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      className={classes.row}\n    >\n      <Grid item xs={11} key='0' className={classes.strikesContainer}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          <Grid item xs={1} key='0'>\n            <FontAwesomeIcon icon={faCircleStop} className={clsx(classes.icon, classes.stop)} onClick={onEndGame} />\n          </Grid>\n          <Grid item xs={1} key='1'>\n            <FontAwesomeIcon icon={faRedo} className={clsx(classes.icon, classes.reset)} onClick={onReset} />\n          </Grid>\n          <Grid item xs={1} key='2'>\n            <FontAwesomeIcon icon={faTrophy} className={clsx(classes.icon, classes.history)} onClick={onHistory} />\n          </Grid>\n          <Grid item xs={1} key='3'>\n            <div onClick={onClickUndo} className={clsx(\n              classes.moves,\n              moves.length === 0\n                ? classes.movesEmpty\n                : classes[`moves${moves[0][0][0].toUpperCase() + moves[0][0].slice(1)}`]\n              )}>\n              {moves.length > 0\n                ? (['red', 'yellow'].includes(moves[0][0]) ? numbers : numbers.toReversed())[moves[0][1]]\n                : null}\n            </div>\n          </Grid>\n          <Grid item xs={3} key='4'>\n            <FontAwesomeIcon icon={faMinus} className={clsx(classes.icon, classes.minusIcon)} />\n          </Grid>\n          {strikes.map((strike, i) => (\n            <Grid item xs\n              key={5 + i}\n              onClick={() => onClick(i)}\n            >\n              <div className={clsx(classes.strike, !strike ? classes.strikeEmpty : null)}>\n                X\n              </div>\n            </Grid>\n          ))}\n          <Grid item xs={1} key='9'\n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.strikesScore,\n              showStrikes && classes.blackText,\n            )}\n            onClick={() => revealScore('showStrikes')}\n          >\n            {strikesScore}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={1} key='1'\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          <Grid item xs key='0'\n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.totalScore,\n              showFinal && classes.blackText\n            )}\n            onClick={() => revealScore('showFinal')}\n          >\n            {totalScore}\n          </Grid>          \n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default StrikesRow;","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function EndGameDialog(props) {\n  const { open, onClose, onLoss, onWin, score } = props;\n\n  return (\n    <Dialog\n      fullScreen={false}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">Game Over</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Your score: {score}<br/>Did you win?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={onLoss} color=\"primary\">\n          No\n        </Button>\n        <Button onClick={onWin} color=\"primary\" autoFocus>\n          Yes!\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function ResetDialog(props) {\n  const { open, onClose, onReset } = props;\n\n  return (\n    <Dialog\n      fullScreen={false}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">Reset</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to reset the card?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          No\n        </Button>\n        <Button onClick={onReset} color=\"primary\">\n          Yes!\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Paper, Table, TableContainer, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport { DeleteForever, Visibility } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(() => {\n  return ({\n    table: {},\n  });\n});\n\nexport default function HistoryDialog(props) {\n  const {\n    open,\n    onClose,\n    onViewHistory,\n    onDeleteHistory,\n    qwixxHistory,\n  } = props;\n  const classes = useStyles();\n\n  const scores = qwixxHistory.map((item) => item.score);\n  const wins = qwixxHistory.map((item) => item.won);\n  const averageScore = Math.round(scores.reduce((a, b) => a + b, 0) / scores.length);\n  const highScore = Math.max(...scores);\n  const winRate = Math.round(100 * wins.reduce((a, b) => a + b, 0) / wins.length);\n\n  return (\n    <Dialog\n      fullScreen={true}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">\n        History (Avg: {averageScore} | High: {highScore} | %Win: {winRate})\n      </DialogTitle>\n      <DialogContent>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Date</TableCell>\n                <TableCell align=\"right\">Score</TableCell>\n                <TableCell align=\"right\">Win?</TableCell>\n                <TableCell align=\"right\">View</TableCell>\n                <TableCell align=\"right\">Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {qwixxHistory.map((row, i) => (\n                <TableRow key={i}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {new Date(row.date).toLocaleDateString()} {new Date(row.date).toLocaleTimeString()}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.score}</TableCell>\n                  <TableCell align=\"right\">{row.won ? 'X' : ''}</TableCell>\n                  <TableCell align=\"right\"><Visibility onClick={() => onViewHistory(i)} /></TableCell>\n                  <TableCell align=\"right\"><DeleteForever onClick={() => onDeleteHistory(i)} /></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React, { Component } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport ColorRow from './components/ColorRow';\nimport StrikesRow from './components/StrikesRow';\nimport { EndGameDialog, ResetDialog, HistoryDialog } from './components/dialogs';\n\nconst scoring = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];\nconst styles = (theme) => ({\n  cardSubTitle: {\n    color: theme.palette.grey.main,\n    display: 'inline-block',\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  disclaimer: {\n    textAlign: 'center',\n    margin: `${theme.spacing(2)} auto`,\n    fontSize: 14,\n  },\n  fiveXTop: {\n    border: '1px solid',\n    borderBottom: 0,\n    borderTopLeftRadius: theme.spacing(2),\n    borderTopRightRadius: theme.spacing(2),\n    display: 'inline-block',\n    float: 'right',\n    fontSize: 14,\n    marginRight: theme.spacing(0.75),\n    textAlign: 'center',\n    width: 130,\n  },\n  fiveXBottom: {\n    border: '1px solid',\n    borderBottomLeftRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    borderTop: 0,\n    display: 'inline-block',\n    float: 'right',\n    height: theme.spacing(),\n    marginBottom: theme.spacing(),\n    marginRight: theme.spacing(0.75),\n    marginTop: -theme.spacing(2),\n    width: 130,\n  },\n  game: {\n    backgroundColor: '#282c34',\n    height: '100%',\n    paddingBottom: `env(safe-area-inset-bottom)`,\n  },\n});\n\nconst diceIndex = { red: 2, yellow: 3, green: 4, blue: 5 };\nconst blankState = {\n  moves: [],\n  blue: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  blueScore: 0,\n  disabledDice: new Array(6).fill(false),\n  endGameDialogOpen: false,\n  resetDialogOpen: false,\n  historyDialogOpen: false,\n  green: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  greenScore: 0,\n  red: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  redScore: 0,\n  showBlue: true, \n  showFinal: true,\n  showGreen: true, \n  showRed: true, \n  showStrikes: true,\n  showYellow: true,\n  strikes: new Array(4).fill(false),\n  strikesScore: 0,\n  yellow: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  yellowScore: 0,\n}\n\nclass QuixxScoreCard extends Component {\n  state = cloneDeep(blankState);\n\n  componentDidMount() {\n    // if there is a saved state, reload it\n    let savedState = localStorage.getItem('QwixxState');\n    if (savedState) {\n      savedState = JSON.parse(savedState);\n      localStorage.removeItem('QwixxState');\n      this.setState(savedState);\n    }\n    \n    // save the state if the user navagates away or refreshes\n    window.addEventListener('pagehide', () => {\n      console.log('saving state');\n      localStorage.setItem('QwixxState', JSON.stringify(this.state));\n    });\n  }\n  \n  /**\n   * Handles clicks for the colored number rows\n   * @param {String} color The color of the row\n   * @param {Number} index The index of the clicked square\n   * @param {Boolean} isLock Whether or not the square clicked is a lock\n  */\n  handleClick = (color, index, isLock) => {\n    const { disabledDice, moves } = this.state;\n    let [marks, disabled] = this.state[color];\n\n    // if disabled do nothing\n    if (disabled[index]) {\n      return;\n    }\n\n    // Add the move to the undo history\n    if (!isLock)\n    {\n      if (moves.length > 0 && moves[0][0] === color && moves[0][1] === index) {\n        moves.shift();\n      } else {\n        moves.unshift([color, index]);\n      }\n    }\n\n    // Disable a dice if a lock is marked\n    // really means toggle the state of both lock and dice when they are in the state\n    // this must be done before marks is modified\n    if (isLock && (\n      (!marks[index] && !disabledDice[diceIndex[color]]) ||\n      (marks[index] && disabledDice[diceIndex[color]])\n    )) {\n      this.toggleDisabled(color);\n    }\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const numMarks = marks.filter(value => value).length - (marks[11] && !marks[10] ? 1 : 0);\n    const score = scoring[numMarks];\n\n    // disable all before the index and enable all after\n    disabled = disabled.map((element, i) => {\n      // Check lock section first, then check the rest\n      return (i === marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n    });\n\n    this.setState({\n      moves: moves,\n      [color]: [marks, disabled],\n      [`${color}Score`]: score,\n    });\n\n    // If two rows have become locked, end the game\n    const { red, yellow, green, blue } = this.state;\n    if ((red[0].toReversed()[0] + yellow[0].toReversed()[0] + green[0].toReversed()[0] + blue[0].toReversed()[0]) > 1) {\n      this.setState({endGameDialogOpen: true});\n    }\n  }\n\n  handleClickUndo = () => {\n    const moves = this.state.moves;\n    this.handleClick(moves[0][0], moves[0][1], false);\n  }\n\n  /**\n   * Handles clicks for the strike row \n   * @param {Number} index The index of the Strike that was clicked\n   */\n  handleClickStrikes = (index) => {\n    const marks = this.state.strikes;\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const score = marks.filter(value => value).length * 5;\n\n    this.setState({\n      strikes: marks,\n      strikesScore: score,\n    });\n\n    // If all strikes have been used, end the game\n    if (marks.reduce((a, b) => a + b, 0) === 4) {\n      this.setState({endGameDialogOpen: true});\n    }\n  }\n\n  handleReset = () => {\n    this.setState(cloneDeep(blankState));\n  }\n\n  handleDelete = (i) => {\n    // TODO: Use proper dialog\n    if (window.confirm('Are you sure you want to delete the record?'))\n    {\n      var history = this.getQwixxHistory().reverse();\n      history.splice(i, 1);\n      this.setQwixxHistory(history.reverse());\n      // Cause the dialog to refresh\n      this.setState({historyDialogOpen: true});\n    }\n  }\n\n  handleView = (i) => {\n    // TODO: Show the game state from the history\n    window.alert(\"Stay tuned for this feature!\");\n  }\n\n  getQwixxHistory = () => JSON.parse(localStorage.getItem('QuixxHistory') || '[]');\n  setQwixxHistory = (history) => localStorage.setItem(\"QuixxHistory\", JSON.stringify(history));\n\n  toggleDisabled = (color) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n    const index = diceIndex[color];\n\n    // toggle the specified dice\n    disabledDice[index] = !disabledDice[index];\n\n    // disable or enable the entries of a row\n    if (disabledDice[index]) {\n      disabled = disabled.map(() => true);\n\n      // don't disable the lock if it is marked\n      if (marks[marks.length - 1]) {\n        disabled[disabled.length - 1] = false;\n      }\n    } else {\n      const numMarks = marks.filter(value => value).length;\n      disabled = disabled.map((element, i) => {\n        // Check lock section first, then check the rest\n        return (i >= marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n      });\n    }\n\n    this.setState({ \n      disabledDice,\n      [color]: [marks, disabled],\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    // const theme = useTheme();\n    // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const {\n      red,\n      yellow,\n      green,\n      blue,\n      blueScore = 0,\n      greenScore = 0,\n      redScore = 0,\n      showBlue,\n      showGreen,\n      showRed,\n      showYellow,\n      showFinal,\n      showStrikes,\n      moves,\n      strikes,\n      strikesScore = 0,\n      yellowScore = 0,\n      endGameDialogOpen,\n      resetDialogOpen,\n      historyDialogOpen,\n    } = this.state;\n\n    const getTotalScore = () => redScore + yellowScore + greenScore + blueScore - strikesScore;\n  \n    const handleLoss = (e) => handleRecordScore(e, false);\n    const handleWin = (e) => handleRecordScore(e, true);\n\n    const handleEndGame = () => {\n      this.setState({endGameDialogOpen: true});\n    };\n    \n    const handleRecordScore = (e, won) => {\n      this.setState({endGameDialogOpen: false});\n      const scores = this.getQwixxHistory();\n      scores.push({\n        'date': (new Date()).toISOString(),\n        'score': getTotalScore(),\n        'won': won,\n        'state': cloneDeep(this.state),\n      });\n      this.setQwixxHistory(scores);\n      this.handleReset();\n    };\n\n    return (\n      <Grid\n        className={classes.game}\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showRed}\n          score={redScore}\n          color='red'\n          row={red}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showYellow}\n          score={yellowScore}\n          color='yellow'\n          row={yellow}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showGreen}\n          score={greenScore}\n          color='green'\n          reverse\n          row={green}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showBlue}\n          score={blueScore}\n          color='blue'\n          reverse\n          row={blue}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <StrikesRow\n          moves={moves}\n          strikes={strikes}\n          onClickUndo={this.handleClickUndo}\n          onEndGame={handleEndGame}\n          onReset={() => this.setState({resetDialogOpen: true})}\n          onHistory={() => this.setState({historyDialogOpen: true})}\n          onClick={(i) => this.handleClickStrikes(i)}\n          showFinal={showFinal}\n          showStrikes={showStrikes}\n          totalScore={getTotalScore()}\n          strikesScore={-strikesScore}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n\n        <EndGameDialog\n          open={endGameDialogOpen}\n          onClose={() => this.setState({endGameDialogOpen: false})}\n          onLoss={handleLoss}\n          onWin={handleWin}\n          score={getTotalScore()}\n        />\n\n        <ResetDialog\n          open={resetDialogOpen}\n          onClose={() => this.setState({resetDialogOpen: false})}\n          onReset={this.handleReset}\n        />\n\n        <HistoryDialog\n          qwixxHistory={this.getQwixxHistory().reverse()}\n          open={historyDialogOpen}\n          onClose={() => this.setState({historyDialogOpen: false})}\n          onViewHistory={this.handleView}\n          onDeleteHistory={this.handleDelete}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(React.memo(QuixxScoreCard));\n","import { createTheme } from '@material-ui/core/styles';\nimport { blue, green, grey, red, yellow } from '@material-ui/core/colors';\n\nexport default createTheme({\n  typography: {\n    fontSize: 28,\n  },\n  palette: {\n    grey: {\n      light: grey[200],\n      main: grey[500],\n      dark: grey[700],\n      darker: grey[900],\n    }, \n    blue: {\n      light: blue[100],\n      main: blue[700],\n    },\n    green: {\n      light: green[100],\n      main: green[700],\n    },\n    red: {\n      light: red[100],\n      main: red[700],\n    },\n    yellow: {\n      light: yellow[100],\n      main: yellow[700],\n    }\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}