{"version":3,"sources":["serviceWorker.js","components/ColorRow.js","components/StrikesRow.js","components/dialogs/EndGame.js","components/dialogs/Reset.js","components/dialogs/History.js","App.js","Theme.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ColorRow","props","score","onClick","revealScore","color","reverse","row","rowHeight","showScore","marks","disabled","classes","makeStyles","theme","palette","blue","green","red","yellow","colorRow","height","height100","backgroundColor","main","padding","spacing","paddingLeft","number","cursor","borderRadius","marginLeft","numberContent","lineHeight","textAlign","width","liveNumber","light","disabledNumber","disabledNumberContent","textDecoration","x","fontWeight","square","circle","breakpoints","down","openLock","fontSize","typography","marginBottom","transform","lock","scoreContent","paddingRight","block","blockRed","borderColor","blockYellow","blockGreen","blockBlue","blackText","useStyles","fiveXLocked","filter","value","length","capitalizedColor","charAt","toUpperCase","slice","Grid","container","direction","justifyContent","alignItems","className","item","xs","key","clsx","map","selected","i","isLock","StrikesRow","onClickUndo","onReset","onEndGame","onHistory","moves","strikes","showStrikes","showFinal","strikesScore","totalScore","grey","scoreContainer","marginRight","border","icon","minusIcon","float","movesEmpty","visibility","movesRed","movesYellow","movesGreen","movesBlue","strike","dark","strikeEmpty","blockWhite","numbers","strikesContainer","faCircleStop","stop","faRedo","reset","faTrophy","history","includes","toReversed","faMinus","EndGameDialog","open","onClose","onLoss","onWin","Dialog","fullScreen","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ResetDialog","styles","root","margin","closeButton","position","right","top","tableContainer","maxHeight","withStyles","children","other","disableTypography","Typography","variant","IconButton","aria-label","HistoryTable","qwixxHistory","onViewHistory","onDeleteHistory","TableContainer","component","Paper","Table","stickyHeader","size","TableHead","TableRow","TableCell","align","TableBody","scope","Date","date","toLocaleDateString","toLocaleTimeString","won","Visibility","DeleteForever","HistoryDialog","scores","wins","averageScore","Math","round","reduce","a","b","highScore","max","winRate","scoring","getRowHeight","innerHeight","diceIndex","blankState","Array","fill","blueScore","disabledDice","endGameDialogOpen","resetDialogOpen","historyDialogOpen","greenScore","redScore","showBlue","showGreen","showRed","showYellow","yellowScore","QuixxScoreCard","cloneDeep","handleClick","index","shift","unshift","toggleDisabled","numMarks","element","lastIndexOf","setState","handleClickUndo","handleClickStrikes","handleReset","handleDelete","confirm","getQwixxHistory","splice","setQwixxHistory","handleView","alert","JSON","parse","localStorage","getItem","setItem","stringify","savedState","removeItem","this","addEventListener","_","getTotalScore","handleRecordScore","e","push","toISOString","game","Component","cardSubTitle","display","flexGrow","disclaimer","fiveXTop","borderBottom","borderTopLeftRadius","borderTopRightRadius","fiveXBottom","borderBottomLeftRadius","borderBottomRightRadius","borderTop","marginTop","paddingBottom","React","memo","createTheme","darker","ReactDOM","render","ThemeProvider","Theme","CssBaseline","App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iPAYMA,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,yICSlD,SAASC,EAASC,GAAQ,IAErCC,EAQED,EARFC,MACAC,EAOEF,EAPFE,QACAC,EAMEH,EANFG,YACAC,EAKEJ,EALFI,MALoC,EAUlCJ,EAJFK,eANoC,SAOpCC,EAGEN,EAHFM,IACAC,EAEEP,EAFFO,UACAC,EACER,EADFQ,UAToC,cAWZF,EAXY,GAW/BG,EAX+B,KAWxBC,EAXwB,KAYhCC,EA9GU,SAACP,EAAOG,GAAR,OAAsBK,aAAW,SAACC,GAAW,IAAD,EACvBA,EAAMC,QAAnCC,EADoD,EACpDA,KAAMC,EAD8C,EAC9CA,MAAOC,EADuC,EACvCA,IAAKC,EADkC,EAClCA,OAE1B,MAAQ,CACNC,SAAU,CACRC,OAAO,GAAD,OAAKb,EAAL,OAERc,UAAW,CACTD,OAAQ,QAEVX,MAAO,CACLa,gBAAiBT,EAAMC,QAAQV,GAAOmB,KACtCC,QAASX,EAAMY,UACfC,YAAY,6BAEdC,OAAQ,CACNC,OAAQ,UACRC,aAAchB,EAAMY,UACpBK,WAAYjB,EAAMY,UAClBD,QAASX,EAAMY,WAEjBM,cAAe,CACbC,WAAY,OACZC,UAAW,SACXC,MAAO,QAETC,WAAY,CACVb,gBAAiBT,EAAMC,QAAQV,GAAOgC,MACtChC,MAAOS,EAAMC,QAAQV,GAAOmB,MAE9Bc,eAAgB,CACdf,gBAAiB,cACjBlB,MAAO,SAETkC,sBAAuB,CACrBC,eAAgB,gBAElBC,EAAG,CACDC,WAAY,OACZrC,MAAO,SAETsC,OAAQ,CACNb,aAAchB,EAAMY,WAEtBkB,OAAO,aACLd,aAAchB,EAAMY,QAAQ,KAC3BZ,EAAM+B,YAAYC,KAAK,MAAQ,CAC9BrB,QAASX,EAAMY,YAGnBqB,SAAU,CACRC,SAAUlC,EAAMmC,WAAWD,SAC3BE,cAAe,EACfC,UAAW,iBAEbC,KAAM,CACJJ,SAAUlC,EAAMmC,WAAWD,SAC3BE,cAAe,GAEjBG,aAAc,CACZC,aAAcxC,EAAMY,QAAQ,IAE9B6B,MAAO,CACLhC,gBAAiB,QACjBM,OAAQ,UACRJ,QAASX,EAAMY,QAAQ,GACvBQ,UAAW,UAEbsB,SAAU,CACRC,YAAavC,EAAIM,KACjBD,gBAAiBL,EAAImB,MACrBhC,MAAOa,EAAImB,MACXiB,aAAa,8BAEfI,YAAa,CACXD,YAAatC,EAAOK,KACpBD,gBAAiBJ,EAAOkB,MACxBhC,MAAOc,EAAOkB,MACdiB,aAAa,8BAEfK,WAAY,CACVF,YAAaxC,EAAMO,KACnBD,gBAAiBN,EAAMoB,MACvBhC,MAAOY,EAAMoB,MACbiB,aAAa,8BAEfM,UAAW,CACTH,YAAazC,EAAKQ,KAClBD,gBAAiBP,EAAKqB,MACtBhC,MAAOW,EAAKqB,MACZiB,aAAa,8BAEfO,UAAW,CACTxD,MAAO,aAiBKyD,CAAUzD,EAAOG,EAAjBsD,GACVC,EAAcrD,EAAMsD,QAAO,SAAAC,GAAK,OAAIA,KAAOC,OAAS,EACpDC,EAAmB9D,EAAM+D,OAAO,GAAGC,cAAgBhE,EAAMiE,MAAM,GAErE,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,SACXC,UAAWhE,EAAQQ,UAEnB,kBAACmD,EAAA,EAAD,CAAMM,MAAI,EAACC,IAAE,EAACC,IAAI,IAAIH,UAAWI,YAAKpE,EAAQF,MAAOE,EAAQU,YAC3D,kBAACiD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,SACXC,UAAWhE,EAAQU,WAElBZ,EAAMuE,KAAI,SAACC,EAAUC,GACpB,IAAMC,EAASD,EAAI,IAAMzE,EAAMwD,OAE/B,OAAOiB,EAAI,GACP,kBAACZ,EAAA,EAAD,CACEM,MAAI,EACJC,IAAE,EACFC,IAAK1E,EAAQ8E,EACbP,UAAWI,YAAKpE,EAAQgB,OAAQhB,EAAQ+B,OAAQhC,EAASwE,KAAOD,EAAWtE,EAAQ0B,eAAiB1B,EAAQwB,YAC5GjC,QAAS,kBAAMA,EAAQE,EAAO8E,KAE9B,yBAAKP,UAAWI,YAAKpE,EAAQoB,cAAerB,EAASwE,KAAOD,GAAYtE,EAAQ2B,wBAC7E2C,EACG,0BAAMN,UAAWhE,EAAQ6B,GAAG,KAC5BnC,EACEI,EAAMwD,OAASiB,EACfA,EAAI,IAId,kBAACZ,EAAA,EAAD,CACEM,MAAI,EACJC,IAAE,EACFC,IAAK1E,EAAQ8E,EACbP,UAAWI,YAAKpE,EAAQgB,OAAQhB,EAAQ+B,OAAQhC,EAASwE,KAAOD,EAAWtE,EAAQ0B,eAAiB1B,EAAQwB,YAC5GjC,QAAS,kBAAMA,EAAQE,EAAO8E,EAAGC,KAEjC,yBAAKR,UAAWI,YACdpE,EAAQoB,eACP+B,GAAepD,EAASwE,KAAOD,GAAYtE,EAAQ2B,wBACnD2C,EACGE,EACE,kBAAC,IAAD,CAAUR,UAAWhE,EAAQwC,OAC7B,0BAAMwB,UAAWhE,EAAQ6B,GAAG,KAC9B2C,EACE,kBAAC,IAAD,CAAcR,UAAWhE,EAAQmC,WACjCzC,EACEI,EAAMwD,OAASiB,EACfA,EAAI,SAO1B,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,IACpBH,UAAWI,YACTpE,EAAQ2C,MACR3C,EAAQU,UACRV,EAAQ,QAAD,OAASuD,IAChB1D,GAAaG,EAAQiD,WAEvB1D,QAAS,kBAAMC,EAAY,OAAD,OAAQ+D,MAElC,yBAAKS,UAAWhE,EAAQyC,cAAenD,K,oBCGhCmF,MA1Gf,SAAoBpF,GAAQ,IAExBE,EAaEF,EAbFE,QACAmF,EAYErF,EAZFqF,YACAC,EAWEtF,EAXFsF,QACAC,EAUEvF,EAVFuF,UACAC,EASExF,EATFwF,UACAC,EAQEzF,EARFyF,MACAC,EAOE1F,EAPF0F,QACAnF,EAMEP,EANFO,UACAoF,EAKE3F,EALF2F,YACAC,EAIE5F,EAJF4F,UACAzF,EAGEH,EAHFG,YACA0F,EAEE7F,EAFF6F,aACAC,EACE9F,EADF8F,WAEInF,EAjGU,SAACJ,GAAD,OAAeK,aAAW,SAACC,GAAW,IAAD,EACVA,EAAMC,QAAzCiF,EAD6C,EAC7CA,KAAMhF,EADuC,EACvCA,KAAMC,EADiC,EACjCA,MAAOC,EAD0B,EAC1BA,IAAKC,EADqB,EACrBA,OAEhC,MAAQ,CACNZ,IAAK,CACHc,OAAO,GAAD,OAAKb,EAAL,OAERyF,eAAgB,CACdC,YAAapF,EAAMY,QAAQ,IAE7BxB,MAAO,CACLqB,gBAAiB,QACjB4E,OAAO,aAAD,OAAerF,EAAMC,QAAQiF,KAAKxE,MACxCM,aAAchB,EAAMY,UACpBC,YAAab,EAAMY,UAAU,EAC7B4B,aAAcxC,EAAMY,UAAU,EAC9BsB,SAAU,IAEZoD,KAAM,CACJ/F,MAAO,QACP8B,MAAO,mBAETkE,UAAW,CACTC,MAAO,QACPJ,YAAapF,EAAMY,QAAQ,GAC3BS,MAAO,mBAETuD,MAAO,CACLnE,gBAAiB,QACjB4E,OAAO,aAAD,OAAerF,EAAMC,QAAQiF,KAAKxE,MACxCM,aAAchB,EAAMY,UAAU,EAC9BG,OAAQ,UACRa,WAAY,OACZjB,QAAQ,OAAD,OAASX,EAAMY,QAAQ,KAAvB,MACPQ,UAAW,UAEbqE,WAAY,CACVC,WAAY,UAEdC,SAAU,CACRlF,gBAAiBL,EAAImB,OAEvBqE,YAAa,CACXnF,gBAAiBJ,EAAOkB,OAE1BsE,WAAY,CACVpF,gBAAiBN,EAAMoB,OAEzBuE,UAAW,CACTrF,gBAAiBP,EAAKqB,OAExBwE,OAAQ,CACNtF,gBAAiB,QACjB4E,OAAO,aAAD,OAAeH,EAAKc,MAC1BhF,aAAchB,EAAMY,QAAQ,GAC5BG,OAAQ,UACRa,WAAY,OACZjB,QAASX,EAAMY,QAAQ,GACvBsB,SAAU,GACVd,UAAW,UAEb6E,YAAa,CACX1G,MAAO,SAETkD,MAAO,CACLhC,gBAAiB,QACjB4E,OAAO,aAAD,OAAeH,EAAKc,MAC1BhF,aAAchB,EAAMY,QAAQ,GAC5BG,OAAQ,UACRJ,QAASX,EAAMY,QAAQ,GACvBQ,UAAW,UAEb8E,WAAY,CACV3G,MAAO,SAETwD,UAAW,CACTxD,MAAO,aAqBKyD,CAAUtD,EAAVsD,GACVmD,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAEjD,OACE,kBAAC1C,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,SACXC,UAAWhE,EAAQL,KAEnB,kBAACgE,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,IAAI,IAAIH,UAAWhE,EAAQsG,kBAC5C,kBAAC3C,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,KACpB,kBAAC,IAAD,CAAiBqB,KAAMe,IAAcvC,UAAWI,YAAKpE,EAAQwF,KAAMxF,EAAQwG,MAAOjH,QAASqF,KAE7F,kBAACjB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,KACpB,kBAAC,IAAD,CAAiBqB,KAAMiB,IAAQzC,UAAWI,YAAKpE,EAAQwF,KAAMxF,EAAQ0G,OAAQnH,QAASoF,KAExF,kBAAChB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,KACpB,kBAAC,IAAD,CAAiBqB,KAAMmB,IAAU3C,UAAWI,YAAKpE,EAAQwF,KAAMxF,EAAQ4G,SAAUrH,QAASsF,KAE5F,kBAAClB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,KACpB,yBAAK5E,QAASmF,EAAaV,UAAWI,YACpCpE,EAAQ8E,MACS,IAAjBA,EAAMxB,OACFtD,EAAQ2F,WACR3F,EAAQ,QAAD,OAAS8E,EAAM,GAAG,GAAG,GAAGrB,cAAgBqB,EAAM,GAAG,GAAGpB,MAAM,OAEpEoB,EAAMxB,OAAS,GACX,CAAC,MAAO,UAAUuD,SAAS/B,EAAM,GAAG,IAAMuB,EAAUA,EAAQS,cAAchC,EAAM,GAAG,IACpF,OAGR,kBAACnB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,KACpB,kBAAC,IAAD,CAAiBqB,KAAMuB,IAAS/C,UAAWI,YAAKpE,EAAQwF,KAAMxF,EAAQyF,cAEvEV,EAAQV,KAAI,SAAC4B,EAAQ1B,GAAT,OACX,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACC,IAAE,EACXC,IAAK,EAAII,EACThF,QAAS,kBAAMA,EAAQgF,KAEvB,yBAAKP,UAAWI,YAAKpE,EAAQiG,OAASA,EAA+B,KAAtBjG,EAAQmG,cAAqB,SAKhF,kBAACxC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,IACpBH,UAAWI,YACTpE,EAAQ2C,MACR3C,EAAQoG,WACRpG,EAAQkF,aACRF,GAAehF,EAAQiD,WAEzB1D,QAAS,kBAAMC,EAAY,iBAE1B0F,KAIP,kBAACvB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,IAAI,KAEpB,kBAACR,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,SACfC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,EAACC,IAAE,EAACC,IAAI,IAChBH,UAAWI,YACTpE,EAAQ2C,MACR3C,EAAQoG,WACRpG,EAAQmF,WACRF,GAAajF,EAAQiD,WAEvB1D,QAAS,kBAAMC,EAAY,eAE1B2F,O,sDCvLE,SAAS6B,EAAc3H,GAAQ,IACpC4H,EAAwC5H,EAAxC4H,KAAMC,EAAkC7H,EAAlC6H,QAASC,EAAyB9H,EAAzB8H,OAAQC,EAAiB/H,EAAjB+H,MAAO9H,EAAUD,EAAVC,MAEtC,OACE,kBAAC+H,EAAA,EAAD,CACEC,YAAY,EACZL,KAAMA,EACNC,QAASA,EACTK,kBAAgB,2BAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,2BAA0B,aAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAmB,eACJrI,EAAM,6BAAK,iBAG5B,kBAACsI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQtI,QAAS2H,EAASzH,MAAM,WAAU,SAG1C,kBAACoI,EAAA,EAAD,CAAQtI,QAAS4H,EAAQ1H,MAAM,WAAU,MAGzC,kBAACoI,EAAA,EAAD,CAAQtI,QAAS6H,EAAO3H,MAAM,UAAUqI,WAAS,GAAC,UCvB3C,SAASC,EAAY1I,GAAQ,IAClC4H,EAA2B5H,EAA3B4H,KAAMC,EAAqB7H,EAArB6H,QAASvC,EAAYtF,EAAZsF,QAEvB,OACE,kBAAC0C,EAAA,EAAD,CACEC,YAAY,EACZL,KAAMA,EACNC,QAASA,EACTK,kBAAgB,2BAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,2BAA0B,SAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAmB,6CAIrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQtI,QAAS2H,EAASzH,MAAM,UAAUqI,WAAS,GAAC,MAGpD,kBAACD,EAAA,EAAD,CAAQtI,QAASoF,EAASlF,MAAM,WAAU,U,uICd5CuI,GAAS,SAAC9H,GAAD,MAAY,CACzB+H,KAAM,CACJC,OAAQ,EACRrH,QAASX,EAAMY,QAAQ,IAEzBqH,YAAa,CACXC,SAAU,WACVC,MAAOnI,EAAMY,QAAQ,GACrBwH,IAAKpI,EAAMY,QAAQ,GACnBrB,MAAOS,EAAMC,QAAQiF,KAAK,MAE5BmD,eAAgB,CACdC,UAAW,UAIThB,GAAciB,YAAWT,GAAXS,EAAmB,SAACpJ,GAAW,IACzCqJ,EAAyCrJ,EAAzCqJ,SAAU1I,EAA+BX,EAA/BW,QAASkH,EAAsB7H,EAAtB6H,QAAYyB,EADS,YACCtJ,EADD,kCAEhD,OACE,kBAAC,IAAD,eAAgB2E,UAAWhE,EAAQiI,KAAMW,mBAAiB,GAAKD,GAC7D,kBAACE,EAAA,EAAD,CAAYC,QAAQ,MAAMJ,GACzBxB,EACC,kBAAC6B,EAAA,EAAD,CAAYC,aAAW,QAAQhF,UAAWhE,EAAQmI,YAAa5I,QAAS2H,GACtE,kBAAC,IAAD,OAEA,SAKJ+B,GAAeR,YAAWT,GAAXS,EAAmB,SAACpJ,GAAW,IAC1CW,EAA0DX,EAA1DW,QAASkJ,EAAiD7J,EAAjD6J,aAAcC,EAAmC9J,EAAnC8J,cAAeC,EAAoB/J,EAApB+J,gBAC9C,OACE,kBAACC,EAAA,EAAD,CAAgBrF,UAAWhE,EAAQuI,eAAgBe,UAAWC,KAC5D,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,KAAK,QAAQV,aAAW,iBAC1C,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,QACX,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAQ,SACzB,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAQ,QACzB,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAQ,QACzB,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAQ,YAG7B,kBAACC,EAAA,EAAD,KACGb,EAAa7E,KAAI,SAAC1E,EAAK4E,GAAN,OAChB,kBAACqF,EAAA,EAAD,CAAUzF,IAAKI,GACb,kBAACsF,EAAA,EAAD,CAAWP,UAAU,KAAKU,MAAM,OAC7B,IAAIC,KAAKtK,EAAIuK,MAAMC,qBAAqB,IAAE,IAAIF,KAAKtK,EAAIuK,MAAME,sBAEhE,kBAACP,EAAA,EAAD,CAAWC,MAAM,SAASnK,EAAIL,OAC9B,kBAACuK,EAAA,EAAD,CAAWC,MAAM,SAASnK,EAAI0K,IAAM,IAAM,IAC1C,kBAACR,EAAA,EAAD,CAAWC,MAAM,SAAQ,kBAACQ,EAAA,EAAD,CAAY/K,QAAS,kBAAM4J,EAAc5E,OAClE,kBAACsF,EAAA,EAAD,CAAWC,MAAM,SAAQ,kBAACS,EAAA,EAAD,CAAehL,QAAS,kBAAM6J,EAAgB7E,iBAStE,SAASiG,GAAcnL,GAAQ,IAE1C4H,EAKE5H,EALF4H,KACAC,EAIE7H,EAJF6H,QACAiC,EAGE9J,EAHF8J,cACAC,EAEE/J,EAFF+J,gBACAF,EACE7J,EADF6J,aAEIuB,EAASvB,EAAa7E,KAAI,SAACJ,GAAD,OAAUA,EAAK3E,SACzCoL,EAAOxB,EAAa7E,KAAI,SAACJ,GAAD,OAAUA,EAAKoG,OACvCM,EAAeC,KAAKC,MAAMJ,EAAOK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAKP,EAAOnH,QACrE2H,EAAYL,KAAKM,IAAL,MAAAN,KAAI,YAAQH,IACxBU,EAAUP,KAAKC,MAAM,IAAMH,EAAKI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAKN,EAAKpH,QAExE,OACE,kBAAC+D,EAAA,EAAD,CACEC,YAAY,EACZL,KAAMA,EACNC,QAASA,EACTK,kBAAgB,2BAEhB,kBAAC,GAAD,CAAaE,GAAG,0BAA0BP,QAASA,GAAS,iBAC3CyD,EAAa,YAAUM,EAAU,YAAUE,EAAQ,KAEpE,kBAACzD,EAAA,EAAD,KACE,kBAACuB,GAAD,CACEE,cAAeA,EACfC,gBAAiBA,EACjBF,aAAcA,MC3FxB,IAAMkC,GAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IA6CvDC,GAAe,WAEnB,OADAvM,QAAQC,IAAInB,OAAO0N,YAAc,GAC1B1N,OAAO0N,YAAc,GAGxBC,GAAY,CAAEjL,IAAK,EAAGC,OAAQ,EAAGF,MAAO,EAAGD,KAAM,GACjDoL,GAAa,CACjB1G,MAAO,GACP1E,KAAM,CACJ,IAAIqL,MAAM,IAAIC,MAAK,GACnB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,IAE/EC,UAAW,EACXC,aAAc,IAAIH,MAAM,GAAGC,MAAK,GAChCG,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnB1L,MAAO,CACL,IAAIoL,MAAM,IAAIC,MAAK,GACnB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,IAE/EM,WAAY,EACZ1L,IAAK,CACH,IAAImL,MAAM,IAAIC,MAAK,GACnB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,IAE/EO,SAAU,EACVC,UAAU,EACVjH,WAAW,EACXkH,WAAW,EACXC,SAAS,EACTpH,aAAa,EACbqH,YAAY,EACZtH,QAAS,IAAI0G,MAAM,GAAGC,MAAK,GAC3BxG,aAAc,EACd3E,OAAQ,CACN,IAAIkL,MAAM,IAAIC,MAAK,GACnB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAM,IAE/EY,YAAa,EACb1M,UAAWyL,MAGPkB,G,4MACJ3N,MAAQ4N,IAAUhB,I,EAyBlBiB,YAAc,SAAChN,EAAOiN,EAAOlI,GAAY,IAAD,IACN,EAAK5F,MAA7BgN,EAD8B,EAC9BA,aAAc9G,EADgB,EAChBA,MADgB,cAEd,EAAKlG,MAAMa,GAFG,GAEjCK,EAFiC,KAE1BC,EAF0B,KAKtC,IAAIA,EAAS2M,GAAb,CAKKlI,IAECM,EAAMxB,OAAS,GAAKwB,EAAM,GAAG,KAAOrF,GAASqF,EAAM,GAAG,KAAO4H,EAC/D5H,EAAM6H,QAEN7H,EAAM8H,QAAQ,CAACnN,EAAOiN,KAOtBlI,KACA1E,EAAM4M,KAAWd,EAAaL,GAAU9L,KACzCK,EAAM4M,IAAUd,EAAaL,GAAU9L,MAExC,EAAKoN,eAAepN,GAItBK,EAAM4M,IAAU5M,EAAM4M,GAGtB,IAAMI,EAAWhN,EAAMsD,QAAO,SAAAC,GAAK,OAAIA,KAAOC,QAAUxD,EAAM,MAAQA,EAAM,IAAM,EAAI,GAChFR,EAAQ8L,GAAQ0B,GAGtB/M,EAAWA,EAASsE,KAAI,SAAC0I,EAASxI,GAEhC,OAAQA,IAAMzE,EAAMwD,OAAS,GAAKwJ,EAAW,GAAMvI,EAAIzE,EAAMkN,aAAY,MAG3E,EAAKC,UAAL,GACEnI,MAAOA,GADT,cAEGrF,EAAQ,CAACK,EAAOC,IAFnB,wBAGMN,EAHN,SAGqBH,GAHrB,IA1CsC,MAiDD,EAAKV,MAAlC0B,EAjD8B,EAiD9BA,IAAKC,EAjDyB,EAiDzBA,OAAQF,EAjDiB,EAiDjBA,MAAOD,EAjDU,EAiDVA,KACvBE,EAAI,GAAGwG,aAAa,GAAKvG,EAAO,GAAGuG,aAAa,GAAKzG,EAAM,GAAGyG,aAAa,GAAK1G,EAAK,GAAG0G,aAAa,GAAM,GAC9G,EAAKmG,SAAS,CAACpB,mBAAmB,M,EAItCqB,gBAAkB,WAChB,IAAMpI,EAAQ,EAAKlG,MAAMkG,MACzB,EAAK2H,YAAY3H,EAAM,GAAG,GAAIA,EAAM,GAAG,IAAI,I,EAO7CqI,mBAAqB,SAACT,GACpB,IAAM5M,EAAQ,EAAKlB,MAAMmG,QAGzBjF,EAAM4M,IAAU5M,EAAM4M,GAGtB,IAAMpN,EAA8C,EAAtCQ,EAAMsD,QAAO,SAAAC,GAAK,OAAIA,KAAOC,OAE3C,EAAK2J,SAAS,CACZlI,QAASjF,EACToF,aAAc5F,IAIyB,IAArCQ,EAAMgL,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAChC,EAAKiC,SAAS,CAACpB,mBAAmB,K,EAItCuB,YAAc,WACZ,EAAKH,SAAST,IAAUhB,M,EAG1B6B,aAAe,SAAC9I,GAEd,GAAI3G,OAAO0P,QAAQ,+CACnB,CACE,IAAI1G,EAAU,EAAK2G,kBAAkB7N,UACrCkH,EAAQ4G,OAAOjJ,EAAG,GAClB,EAAKkJ,gBAAgB7G,EAAQlH,WAE7B,EAAKuN,SAAS,CAAClB,mBAAmB,M,EAItC2B,WAAa,SAACnJ,GAEZ3G,OAAO+P,MAAM,iC,EAGfJ,gBAAkB,kBAAMK,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,O,EAC3EN,gBAAkB,SAAC7G,GAAD,OAAakH,aAAaE,QAAQ,eAAgBJ,KAAKK,UAAUrH,K,EAEnFiG,eAAiB,SAACpN,GAAW,IACnBmM,EAAiB,EAAKhN,MAAtBgN,aADkB,cAEF,EAAKhN,MAAMa,GAFT,GAErBK,EAFqB,KAEdC,EAFc,KAGpB2M,EAAQnB,GAAU9L,GAMxB,GAHAmM,EAAac,IAAUd,EAAac,GAGhCd,EAAac,GACf3M,EAAWA,EAASsE,KAAI,kBAAM,KAG1BvE,EAAMA,EAAMwD,OAAS,KACvBvD,EAASA,EAASuD,OAAS,IAAK,OAE7B,CACL,IAAMwJ,EAAWhN,EAAMsD,QAAO,SAAAC,GAAK,OAAIA,KAAOC,OAC9CvD,EAAWA,EAASsE,KAAI,SAAC0I,EAASxI,GAEhC,OAAQA,GAAKzE,EAAMwD,OAAS,GAAKwJ,EAAW,GAAMvI,EAAIzE,EAAMkN,aAAY,MAI5E,EAAKC,SAAL,aACErB,gBACCnM,EAAQ,CAACK,EAAOC,M,kEA7JA,IAAD,OAEdmO,EAAaJ,aAAaC,QAAQ,cAClCG,IACFA,EAAaN,KAAKC,MAAMK,GACxBJ,aAAaK,WAAW,cACxBC,KAAKnB,SAASiB,IAEhBtQ,OAAOyQ,iBAAiB,UAAU,SAACC,GAAD,OAAO,EAAKrB,SAAS,CAACrN,UAAWyL,UAGnEzN,OAAOyQ,iBAAiB,YAAY,WAClCvP,QAAQC,IAAI,gBACZ+O,aAAaE,QAAQ,aAAcJ,KAAKK,UAAU,EAAKrP,a,+BAoJjD,IAAD,OACCoB,EAAYoO,KAAK/O,MAAjBW,QADD,EA0BHoO,KAAKxP,MArBP0B,EALK,EAKLA,IACAC,EANK,EAMLA,OACAF,EAPK,EAOLA,MACAD,EARK,EAQLA,KARK,IASLuL,iBATK,MASO,EATP,MAULK,kBAVK,MAUQ,EAVR,MAWLC,gBAXK,MAWM,EAXN,EAYLC,EAZK,EAYLA,SACAC,EAbK,EAaLA,UACAC,EAdK,EAcLA,QACAC,EAfK,EAeLA,WACApH,EAhBK,EAgBLA,UACAD,EAjBK,EAiBLA,YACAF,EAlBK,EAkBLA,MACAC,EAnBK,EAmBLA,QAnBK,IAoBLG,oBApBK,MAoBU,EApBV,MAqBLoH,mBArBK,MAqBS,EArBT,EAsBLT,EAtBK,EAsBLA,kBACAC,EAvBK,EAuBLA,gBACAC,EAxBK,EAwBLA,kBACAnM,EAzBK,EAyBLA,UAGI2O,EAAgB,kBAAMtC,EAAWK,EAAcN,EAAaL,EAAYzG,GASxEsJ,EAAoB,SAACC,EAAGpE,GAC5B,EAAK4C,SAAS,CAACpB,mBAAmB,IAClC,IAAMpB,EAAS,EAAK8C,kBACpB9C,EAAOiE,KAAK,CACV,MAAS,IAAIzE,MAAQ0E,cACrB,MAASJ,IACT,IAAOlE,EACP,MAASmC,IAAU,EAAK5N,SAE1B,EAAK6O,gBAAgBhD,GACrB,EAAK2C,eAGP,OACE,kBAACzJ,EAAA,EAAD,CACEK,UAAWhE,EAAQ4O,KACnBhL,WAAS,EACTC,UAAU,SACVC,eAAe,SACfC,WAAW,UAEX,kBAAC3E,EAAD,CACEG,QAAS6O,KAAK3B,YACd5M,UAAWuM,EACX9M,MAAO2M,EACPxM,MAAM,MACNE,IAAKW,EACLV,UAAWA,EACXJ,YAAa,SAACF,GAAD,OAAW,EAAK2N,SAAL,eAAiB3N,GAAS,EAAKV,MAAMU,QAE/D,kBAACF,EAAD,CACEG,QAAS6O,KAAK3B,YACd5M,UAAWwM,EACX/M,MAAOgN,EACP7M,MAAM,SACNE,IAAKY,EACLX,UAAWA,EACXJ,YAAa,SAACF,GAAD,OAAW,EAAK2N,SAAL,eAAiB3N,GAAS,EAAKV,MAAMU,QAE/D,kBAACF,EAAD,CACEG,QAAS6O,KAAK3B,YACd5M,UAAWsM,EACX7M,MAAO0M,EACPvM,MAAM,QACNC,SAAO,EACPC,IAAKU,EACLT,UAAWA,EACXJ,YAAa,SAACF,GAAD,OAAW,EAAK2N,SAAL,eAAiB3N,GAAS,EAAKV,MAAMU,QAE/D,kBAACF,EAAD,CACEG,QAAS6O,KAAK3B,YACd5M,UAAWqM,EACX5M,MAAOqM,EACPlM,MAAM,OACNC,SAAO,EACPC,IAAKS,EACLR,UAAWA,EACXJ,YAAa,SAACF,GAAD,OAAW,EAAK2N,SAAL,eAAiB3N,GAAS,EAAKV,MAAMU,QAE/D,kBAAC,EAAD,CACEwF,MAAOA,EACPC,QAASA,EACTnF,UAAWA,EACX8E,YAAa0J,KAAKlB,gBAClBtI,UApEgB,WACpB,EAAKqI,SAAS,CAACpB,mBAAmB,KAoE9BlH,QAAS,kBAAM,EAAKsI,SAAS,CAACnB,iBAAiB,KAC/CjH,UAAW,kBAAM,EAAKoI,SAAS,CAAClB,mBAAmB,KACnDxM,QAAS,SAACgF,GAAD,OAAO,EAAK4I,mBAAmB5I,IACxCU,UAAWA,EACXD,YAAaA,EACbG,WAAYoJ,IACZrJ,cAAeA,EACf1F,YAAa,SAACF,GAAD,OAAW,EAAK2N,SAAL,eAAiB3N,GAAS,EAAKV,MAAMU,QAG/D,kBAAC0H,EAAD,CACEC,KAAM4E,EACN3E,QAAS,kBAAM,EAAK+F,SAAS,CAACpB,mBAAmB,KACjD1E,OArFa,SAACsH,GAAD,OAAOD,EAAkBC,GAAG,IAsFzCrH,MArFY,SAACqH,GAAD,OAAOD,EAAkBC,GAAG,IAsFxCnP,MAAOiP,MAGT,kBAACxG,EAAD,CACEd,KAAM6E,EACN5E,QAAS,kBAAM,EAAK+F,SAAS,CAACnB,iBAAiB,KAC/CnH,QAASyJ,KAAKhB,cAGhB,kBAAC5C,GAAD,CACEtB,aAAckF,KAAKb,kBAAkB7N,UACrCuH,KAAM8E,EACN7E,QAAS,kBAAM,EAAK+F,SAAS,CAAClB,mBAAmB,KACjD5C,cAAeiF,KAAKV,WACpBtE,gBAAiBgF,KAAKf,oB,GAvSHwB,aA8SdpG,gBArYA,SAACvI,GAAD,MAAY,CACzB4O,aAAc,CACZrP,MAAOS,EAAMC,QAAQiF,KAAKxE,KAC1BmO,QAAS,eACTjN,WAAY,OACZkN,SAAU,GAEZC,WAAY,CACV3N,UAAW,SACX4G,OAAO,GAAD,OAAKhI,EAAMY,QAAQ,GAAnB,SACNsB,SAAU,IAEZ8M,SAAU,CACR3J,OAAQ,YACR4J,aAAc,EACdC,oBAAqBlP,EAAMY,QAAQ,GACnCuO,qBAAsBnP,EAAMY,QAAQ,GACpCiO,QAAS,eACTrJ,MAAO,QACPtD,SAAU,GACVkD,YAAapF,EAAMY,QAAQ,KAC3BQ,UAAW,SACXC,MAAO,KAET+N,YAAa,CACX/J,OAAQ,YACRgK,uBAAwBrP,EAAMY,QAAQ,GACtC0O,wBAAyBtP,EAAMY,QAAQ,GACvC2O,UAAW,EACXV,QAAS,eACTrJ,MAAO,QACPjF,OAAQP,EAAMY,UACdwB,aAAcpC,EAAMY,UACpBwE,YAAapF,EAAMY,QAAQ,KAC3B4O,WAAYxP,EAAMY,QAAQ,GAC1BS,MAAO,KAETqN,KAAM,CACJjO,gBAAiB,UACjBF,OAAQ,OACRkP,cAAc,kCA6VHlH,CAAmBmH,IAAMC,KAAKtD,K,uDC3Y9BuD,gBAAY,CACzBzN,WAAY,CACVD,SAAU,IAEZjC,QAAS,CACPiF,KAAM,CACJ3D,MAAO2D,KAAK,KACZxE,KAAMwE,KAAK,KACXc,KAAMd,KAAK,KACX2K,OAAQ3K,KAAK,MAEfhF,KAAM,CACJqB,MAAOrB,KAAK,KACZQ,KAAMR,KAAK,MAEbC,MAAO,CACLoB,MAAOpB,KAAM,KACbO,KAAMP,KAAM,MAEdC,IAAK,CACHmB,MAAOnB,KAAI,KACXM,KAAMN,KAAI,MAEZC,OAAQ,CACNkB,MAAOlB,KAAO,KACdK,KAAML,KAAO,SCjBnByP,IAASC,OACP,kBAACC,EAAA,EAAD,CAAehQ,MAAOiQ,IACpB,kBAACC,EAAA,EAAD,MACA,kBAACC,GAAD,OAEFC,SAASC,eAAe,SRMnB,SAAkBrS,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqS,IAAIC,IAAwB7S,OAAOC,SAAS6S,MACpDC,SAAW/S,OAAOC,SAAS8S,OAIvC,OAGF/S,OAAOyQ,iBAAiB,QAAQ,WAC9B,IAAMpQ,EAAK,UAAMwS,IAAN,sBAEP/S,IAgEV,SAAiCO,EAAOC,GAEtC0S,MAAM3S,GACHK,MAAK,SAAAuS,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/S,UAAUC,cAAc+S,MAAM7S,MAAK,SAAAC,GACjCA,EAAa6S,aAAa9S,MAAK,WAC7BV,OAAOC,SAASwT,eAKpBrT,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEArFAuS,CAAwBrT,EAAOC,GAI/BC,UAAUC,cAAc+S,MAAM7S,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OQ7B/BE,K","file":"static/js/main.b3991e22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport OpenLockIcon from '@material-ui/icons/LockOpenOutlined';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = (color, rowHeight) => makeStyles((theme) => {\n  const { blue, green, red, yellow } = theme.palette;\n\n  return ({\n    colorRow: {\n      height: `${rowHeight}px`,\n    },\n    height100: {\n      height: '100%',\n    },\n    marks: {\n      backgroundColor: theme.palette[color].main,\n      padding: theme.spacing(),\n      paddingLeft: `env(safe-area-inset-left)`,\n    },\n    number: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(),\n      marginLeft: theme.spacing(),\n      padding: theme.spacing(),\n    },\n    numberContent: {\n      lineHeight: '100%',\n      textAlign: 'center',\n      width: '100%',\n    },\n    liveNumber: {\n      backgroundColor: theme.palette[color].light,\n      color: theme.palette[color].main,\n    },\n    disabledNumber: {\n      backgroundColor: 'transparent',\n      color: 'black',\n    },\n    disabledNumberContent: {\n      textDecoration: 'line-through',\n    },\n    x: {\n      fontWeight: 'bold',\n      color: 'black',\n    },\n    square: {\n      borderRadius: theme.spacing(),\n    },\n    circle: {\n      borderRadius: theme.spacing(20),\n      [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(),\n      },\n    },\n    openLock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n      transform: 'rotate(45deg)',\n    },\n    lock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n    },\n    scoreContent: {\n      paddingRight: theme.spacing(2),\n    },\n    block: {\n      backgroundColor: 'white',\n      cursor: 'pointer',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n    },\n    blockRed: {\n      borderColor: red.main,\n      backgroundColor: red.light,\n      color: red.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockYellow: {\n      borderColor: yellow.main,\n      backgroundColor: yellow.light,\n      color: yellow.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockGreen: {\n      borderColor: green.main,\n      backgroundColor: green.light,\n      color: green.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockBlue: {\n      borderColor: blue.main,\n      backgroundColor: blue.light,\n      color: blue.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blackText: {\n      color: 'black',\n    },\n  });\n});\n\nexport default function ColorRow(props) {\n  const {\n    score,\n    onClick,\n    revealScore,\n    color,\n    reverse = false,\n    row,\n    rowHeight,\n    showScore,\n  } = props;\n  const [marks, disabled] = row;\n  const classes = useStyles(color, rowHeight)();\n  const fiveXLocked = marks.filter(value => value).length < 5;\n  const capitalizedColor = color.charAt(0).toUpperCase() + color.slice(1);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      className={classes.colorRow}\n    >\n      <Grid item xs key='0' className={clsx(classes.marks, classes.height100)}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n          className={classes.height100}\n        >\n          {marks.map((selected, i) => {\n            const isLock = i + 1 === marks.length;\n\n            return i < 10\n              ? <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i)}\n                >\n                  <div className={clsx(classes.numberContent, disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? <span className={classes.x}>X</span>\n                      : reverse\n                        ? marks.length - i\n                        : i + 2\n                    }\n                  </div>\n                </Grid>\n              : <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i, isLock)}\n                >\n                  <div className={clsx(\n                    classes.numberContent,\n                    !fiveXLocked && disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? isLock\n                        ? <LockIcon className={classes.lock} />\n                        : <span className={classes.x}>X</span>\n                      : isLock\n                        ? <OpenLockIcon className={classes.openLock} />\n                        : reverse\n                          ? marks.length - i\n                          : i + 2\n                    }\n                  </div>\n                </Grid>;\n          })}\n        </Grid>\n      </Grid>\n      <Grid item xs={1} key='1'\n        className={clsx(\n          classes.block,\n          classes.height100,\n          classes[`block${capitalizedColor}`],\n          showScore && classes.blackText\n        )}\n        onClick={() => revealScore(`show${capitalizedColor}`)}\n      >\n        <div className={classes.scoreContent}>{score}</div>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faRedo, faCircleStop, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = (rowHeight) => makeStyles((theme) => {\n  const { grey, blue, green, red, yellow } = theme.palette;\n\n  return ({\n    row: {\n      height: `${rowHeight}px`,\n    },\n    scoreContainer: {\n      marginRight: theme.spacing(2),\n    },\n    score: {\n      backgroundColor: 'white',\n      border: `2px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing(),\n      paddingLeft: theme.spacing()/2,\n      paddingRight: theme.spacing()/2,\n      fontSize: 18,\n    },\n    icon: {\n      color: 'white',\n      width: '100% !important',\n    },\n    minusIcon: {\n      float: 'right',\n      marginRight: theme.spacing(2),\n      width: 'auto !important',\n    },\n    moves: {\n      backgroundColor: 'white',\n      border: `1px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing()/2,\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: `5px ${theme.spacing(1.9)}px`,\n      textAlign: 'center',\n    },\n    movesEmpty: {\n      visibility: 'hidden',\n    },\n    movesRed: {\n      backgroundColor: red.light,\n    },\n    movesYellow: {\n      backgroundColor: yellow.light,\n    },\n    movesGreen: {\n      backgroundColor: green.light,\n    },\n    movesBlue: {\n      backgroundColor: blue.light,\n    },\n    strike: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: theme.spacing(1),\n      fontSize: 28,\n      textAlign: 'center',\n    },\n    strikeEmpty: {\n      color: 'White',\n    },\n    block: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      cursor: 'pointer',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n    },\n    blockWhite: {\n      color: 'white',\n    },\n    blackText: {\n      color: 'black',\n    },\n  });\n});\n\nfunction StrikesRow(props) {\n  const {\n    onClick,\n    onClickUndo,\n    onReset,\n    onEndGame,\n    onHistory,\n    moves,\n    strikes,\n    rowHeight,\n    showStrikes,\n    showFinal,\n    revealScore,\n    strikesScore,\n    totalScore\n  } = props;\n  const classes = useStyles(rowHeight)();\n  const numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      className={classes.row}\n    >\n      <Grid item xs={11} key='0' className={classes.strikesContainer}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          <Grid item xs={1} key='0'>\n            <FontAwesomeIcon icon={faCircleStop} className={clsx(classes.icon, classes.stop)} onClick={onEndGame} />\n          </Grid>\n          <Grid item xs={1} key='1'>\n            <FontAwesomeIcon icon={faRedo} className={clsx(classes.icon, classes.reset)} onClick={onReset} />\n          </Grid>\n          <Grid item xs={1} key='2'>\n            <FontAwesomeIcon icon={faTrophy} className={clsx(classes.icon, classes.history)} onClick={onHistory} />\n          </Grid>\n          <Grid item xs={1} key='3'>\n            <div onClick={onClickUndo} className={clsx(\n              classes.moves,\n              moves.length === 0\n                ? classes.movesEmpty\n                : classes[`moves${moves[0][0][0].toUpperCase() + moves[0][0].slice(1)}`]\n              )}>\n              {moves.length > 0\n                ? (['red', 'yellow'].includes(moves[0][0]) ? numbers : numbers.toReversed())[moves[0][1]]\n                : null}\n            </div>\n          </Grid>\n          <Grid item xs={3} key='4'>\n            <FontAwesomeIcon icon={faMinus} className={clsx(classes.icon, classes.minusIcon)} />\n          </Grid>\n          {strikes.map((strike, i) => (\n            <Grid item xs\n              key={5 + i}\n              onClick={() => onClick(i)}\n            >\n              <div className={clsx(classes.strike, !strike ? classes.strikeEmpty : null)}>\n                X\n              </div>\n            </Grid>\n          ))}\n          <Grid item xs={1} key='9'\n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.strikesScore,\n              showStrikes && classes.blackText,\n            )}\n            onClick={() => revealScore('showStrikes')}\n          >\n            {strikesScore}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={1} key='1'\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          <Grid item xs key='0'\n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.totalScore,\n              showFinal && classes.blackText\n            )}\n            onClick={() => revealScore('showFinal')}\n          >\n            {totalScore}\n          </Grid>          \n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default StrikesRow;","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function EndGameDialog(props) {\n  const { open, onClose, onLoss, onWin, score } = props;\n\n  return (\n    <Dialog\n      fullScreen={false}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">Game Over</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Your score: {score}<br/>Did you win?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={onLoss} color=\"primary\">\n          No\n        </Button>\n        <Button onClick={onWin} color=\"primary\" autoFocus>\n          Yes!\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function ResetDialog(props) {\n  const { open, onClose, onReset } = props;\n\n  return (\n    <Dialog\n      fullScreen={false}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">Reset</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to reset the card?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          No\n        </Button>\n        <Button onClick={onReset} color=\"primary\">\n          Yes!\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React from 'react';\nimport { Dialog, DialogContent, Paper, Table, TableContainer, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { DeleteForever, Visibility } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  tableContainer: {\n    maxHeight: '100%',\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle className={classes.root} disableTypography {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst HistoryTable = withStyles(styles)((props) => {\n  const { classes, qwixxHistory, onViewHistory, onDeleteHistory } = props;\n  return (\n    <TableContainer className={classes.tableContainer} component={Paper}>\n      <Table stickyHeader size=\"small\" aria-label=\"history table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell align=\"right\">Score</TableCell>\n            <TableCell align=\"right\">Win?</TableCell>\n            <TableCell align=\"right\">View</TableCell>\n            <TableCell align=\"right\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {qwixxHistory.map((row, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\">\n                {new Date(row.date).toLocaleDateString()} {new Date(row.date).toLocaleTimeString()}\n              </TableCell>\n              <TableCell align=\"right\">{row.score}</TableCell>\n              <TableCell align=\"right\">{row.won ? 'X' : ''}</TableCell>\n              <TableCell align=\"right\"><Visibility onClick={() => onViewHistory(i)} /></TableCell>\n              <TableCell align=\"right\"><DeleteForever onClick={() => onDeleteHistory(i)} /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n});\n\nexport default function HistoryDialog(props) {\n  const {\n    open,\n    onClose,\n    onViewHistory,\n    onDeleteHistory,\n    qwixxHistory,\n  } = props;\n  const scores = qwixxHistory.map((item) => item.score);\n  const wins = qwixxHistory.map((item) => item.won);\n  const averageScore = Math.round(scores.reduce((a, b) => a + b, 0) / scores.length);\n  const highScore = Math.max(...scores);\n  const winRate = Math.round(100 * wins.reduce((a, b) => a + b, 0) / wins.length);\n\n  return (\n    <Dialog\n      fullScreen={true}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\" onClose={onClose}>\n        History (Avg: {averageScore} | High: {highScore} | %Win: {winRate})\n      </DialogTitle>\n      <DialogContent>\n        <HistoryTable\n          onViewHistory={onViewHistory}\n          onDeleteHistory={onDeleteHistory}\n          qwixxHistory={qwixxHistory}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n}","import React, { Component } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport ColorRow from './components/ColorRow';\nimport StrikesRow from './components/StrikesRow';\nimport { EndGameDialog, ResetDialog, HistoryDialog } from './components/dialogs';\n\nconst scoring = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];\nconst styles = (theme) => ({\n  cardSubTitle: {\n    color: theme.palette.grey.main,\n    display: 'inline-block',\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  disclaimer: {\n    textAlign: 'center',\n    margin: `${theme.spacing(2)} auto`,\n    fontSize: 14,\n  },\n  fiveXTop: {\n    border: '1px solid',\n    borderBottom: 0,\n    borderTopLeftRadius: theme.spacing(2),\n    borderTopRightRadius: theme.spacing(2),\n    display: 'inline-block',\n    float: 'right',\n    fontSize: 14,\n    marginRight: theme.spacing(0.75),\n    textAlign: 'center',\n    width: 130,\n  },\n  fiveXBottom: {\n    border: '1px solid',\n    borderBottomLeftRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    borderTop: 0,\n    display: 'inline-block',\n    float: 'right',\n    height: theme.spacing(),\n    marginBottom: theme.spacing(),\n    marginRight: theme.spacing(0.75),\n    marginTop: -theme.spacing(2),\n    width: 130,\n  },\n  game: {\n    backgroundColor: '#282c34',\n    height: '100%',\n    paddingBottom: `env(safe-area-inset-bottom)`,\n  },\n});\n\nconst getRowHeight = () => {\n  console.log(window.innerHeight / 5);\n  return window.innerHeight / 5;\n}\n\nconst diceIndex = { red: 2, yellow: 3, green: 4, blue: 5 };\nconst blankState = {\n  moves: [],\n  blue: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  blueScore: 0,\n  disabledDice: new Array(6).fill(false),\n  endGameDialogOpen: false,\n  resetDialogOpen: false,\n  historyDialogOpen: false,\n  green: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  greenScore: 0,\n  red: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  redScore: 0,\n  showBlue: true, \n  showFinal: true,\n  showGreen: true, \n  showRed: true, \n  showStrikes: true,\n  showYellow: true,\n  strikes: new Array(4).fill(false),\n  strikesScore: 0,\n  yellow: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  yellowScore: 0,\n  rowHeight: getRowHeight(),\n}\n\nclass QuixxScoreCard extends Component {\n  state = cloneDeep(blankState);\n\n  componentDidMount() {\n    // if there is a saved state, reload it\n    let savedState = localStorage.getItem('QwixxState');\n    if (savedState) {\n      savedState = JSON.parse(savedState);\n      localStorage.removeItem('QwixxState');\n      this.setState(savedState);\n    }\n    window.addEventListener('resize', (_) => this.setState({rowHeight: getRowHeight()}));\n    \n    // save the state if the user navagates away or refreshes\n    window.addEventListener('pagehide', () => {\n      console.log('saving state');\n      localStorage.setItem('QwixxState', JSON.stringify(this.state));\n    });\n  }\n  \n  /**\n   * Handles clicks for the colored number rows\n   * @param {String} color The color of the row\n   * @param {Number} index The index of the clicked square\n   * @param {Boolean} isLock Whether or not the square clicked is a lock\n  */\n  handleClick = (color, index, isLock) => {\n    const { disabledDice, moves } = this.state;\n    let [marks, disabled] = this.state[color];\n\n    // if disabled do nothing\n    if (disabled[index]) {\n      return;\n    }\n\n    // Add the move to the undo history\n    if (!isLock)\n    {\n      if (moves.length > 0 && moves[0][0] === color && moves[0][1] === index) {\n        moves.shift();\n      } else {\n        moves.unshift([color, index]);\n      }\n    }\n\n    // Disable a dice if a lock is marked\n    // really means toggle the state of both lock and dice when they are in the state\n    // this must be done before marks is modified\n    if (isLock && (\n      (!marks[index] && !disabledDice[diceIndex[color]]) ||\n      (marks[index] && disabledDice[diceIndex[color]])\n    )) {\n      this.toggleDisabled(color);\n    }\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const numMarks = marks.filter(value => value).length - (marks[11] && !marks[10] ? 1 : 0);\n    const score = scoring[numMarks];\n\n    // disable all before the index and enable all after\n    disabled = disabled.map((element, i) => {\n      // Check lock section first, then check the rest\n      return (i === marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n    });\n\n    this.setState({\n      moves: moves,\n      [color]: [marks, disabled],\n      [`${color}Score`]: score,\n    });\n\n    // If two rows have become locked, end the game\n    const { red, yellow, green, blue } = this.state;\n    if ((red[0].toReversed()[0] + yellow[0].toReversed()[0] + green[0].toReversed()[0] + blue[0].toReversed()[0]) > 1) {\n      this.setState({endGameDialogOpen: true});\n    }\n  }\n\n  handleClickUndo = () => {\n    const moves = this.state.moves;\n    this.handleClick(moves[0][0], moves[0][1], false);\n  }\n\n  /**\n   * Handles clicks for the strike row \n   * @param {Number} index The index of the Strike that was clicked\n   */\n  handleClickStrikes = (index) => {\n    const marks = this.state.strikes;\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const score = marks.filter(value => value).length * 5;\n\n    this.setState({\n      strikes: marks,\n      strikesScore: score,\n    });\n\n    // If all strikes have been used, end the game\n    if (marks.reduce((a, b) => a + b, 0) === 4) {\n      this.setState({endGameDialogOpen: true});\n    }\n  }\n\n  handleReset = () => {\n    this.setState(cloneDeep(blankState));\n  }\n\n  handleDelete = (i) => {\n    // TODO: Use proper dialog\n    if (window.confirm('Are you sure you want to delete the record?'))\n    {\n      var history = this.getQwixxHistory().reverse();\n      history.splice(i, 1);\n      this.setQwixxHistory(history.reverse());\n      // Cause the dialog to refresh\n      this.setState({historyDialogOpen: true});\n    }\n  }\n\n  handleView = (i) => {\n    // TODO: Show the game state from the history\n    window.alert(\"Stay tuned for this feature!\");\n  }\n\n  getQwixxHistory = () => JSON.parse(localStorage.getItem('QuixxHistory') || '[]');\n  setQwixxHistory = (history) => localStorage.setItem(\"QuixxHistory\", JSON.stringify(history));\n\n  toggleDisabled = (color) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n    const index = diceIndex[color];\n\n    // toggle the specified dice\n    disabledDice[index] = !disabledDice[index];\n\n    // disable or enable the entries of a row\n    if (disabledDice[index]) {\n      disabled = disabled.map(() => true);\n\n      // don't disable the lock if it is marked\n      if (marks[marks.length - 1]) {\n        disabled[disabled.length - 1] = false;\n      }\n    } else {\n      const numMarks = marks.filter(value => value).length;\n      disabled = disabled.map((element, i) => {\n        // Check lock section first, then check the rest\n        return (i >= marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n      });\n    }\n\n    this.setState({ \n      disabledDice,\n      [color]: [marks, disabled],\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    // const theme = useTheme();\n    // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const {\n      red,\n      yellow,\n      green,\n      blue,\n      blueScore = 0,\n      greenScore = 0,\n      redScore = 0,\n      showBlue,\n      showGreen,\n      showRed,\n      showYellow,\n      showFinal,\n      showStrikes,\n      moves,\n      strikes,\n      strikesScore = 0,\n      yellowScore = 0,\n      endGameDialogOpen,\n      resetDialogOpen,\n      historyDialogOpen,\n      rowHeight,\n    } = this.state;\n\n    const getTotalScore = () => redScore + yellowScore + greenScore + blueScore - strikesScore;\n  \n    const handleLoss = (e) => handleRecordScore(e, false);\n    const handleWin = (e) => handleRecordScore(e, true);\n\n    const handleEndGame = () => {\n      this.setState({endGameDialogOpen: true});\n    };\n    \n    const handleRecordScore = (e, won) => {\n      this.setState({endGameDialogOpen: false});\n      const scores = this.getQwixxHistory();\n      scores.push({\n        'date': (new Date()).toISOString(),\n        'score': getTotalScore(),\n        'won': won,\n        'state': cloneDeep(this.state),\n      });\n      this.setQwixxHistory(scores);\n      this.handleReset();\n    };\n\n    return (\n      <Grid\n        className={classes.game}\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showRed}\n          score={redScore}\n          color='red'\n          row={red}\n          rowHeight={rowHeight}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showYellow}\n          score={yellowScore}\n          color='yellow'\n          row={yellow}\n          rowHeight={rowHeight}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showGreen}\n          score={greenScore}\n          color='green'\n          reverse\n          row={green}\n          rowHeight={rowHeight}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showBlue}\n          score={blueScore}\n          color='blue'\n          reverse\n          row={blue}\n          rowHeight={rowHeight}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <StrikesRow\n          moves={moves}\n          strikes={strikes}\n          rowHeight={rowHeight}\n          onClickUndo={this.handleClickUndo}\n          onEndGame={handleEndGame}\n          onReset={() => this.setState({resetDialogOpen: true})}\n          onHistory={() => this.setState({historyDialogOpen: true})}\n          onClick={(i) => this.handleClickStrikes(i)}\n          showFinal={showFinal}\n          showStrikes={showStrikes}\n          totalScore={getTotalScore()}\n          strikesScore={-strikesScore}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n\n        <EndGameDialog\n          open={endGameDialogOpen}\n          onClose={() => this.setState({endGameDialogOpen: false})}\n          onLoss={handleLoss}\n          onWin={handleWin}\n          score={getTotalScore()}\n        />\n\n        <ResetDialog\n          open={resetDialogOpen}\n          onClose={() => this.setState({resetDialogOpen: false})}\n          onReset={this.handleReset}\n        />\n\n        <HistoryDialog\n          qwixxHistory={this.getQwixxHistory().reverse()}\n          open={historyDialogOpen}\n          onClose={() => this.setState({historyDialogOpen: false})}\n          onViewHistory={this.handleView}\n          onDeleteHistory={this.handleDelete}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(React.memo(QuixxScoreCard));\n","import { createTheme } from '@material-ui/core/styles';\nimport { blue, green, grey, red, yellow } from '@material-ui/core/colors';\n\nexport default createTheme({\n  typography: {\n    fontSize: 28,\n  },\n  palette: {\n    grey: {\n      light: grey[200],\n      main: grey[500],\n      dark: grey[700],\n      darker: grey[900],\n    }, \n    blue: {\n      light: blue[100],\n      main: blue[700],\n    },\n    green: {\n      light: green[100],\n      main: green[700],\n    },\n    red: {\n      light: red[100],\n      main: red[700],\n    },\n    yellow: {\n      light: yellow[100],\n      main: yellow[700],\n    }\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}