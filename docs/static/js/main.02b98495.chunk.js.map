{"version":3,"sources":["serviceWorker.js","components/ColorRow.js","components/StrikesRow.js","App.js","Theme.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ColorRow","props","score","onClick","revealScore","color","reverse","row","showScore","marks","disabled","classes","makeStyles","theme","palette","blue","green","red","yellow","backgroundColor","main","padding","spacing","paddingLeft","number","cursor","borderRadius","marginLeft","numberContent","textAlign","width","liveNumber","light","disabledNumber","disabledNumberContent","textDecoration","x","fontWeight","square","circle","breakpoints","down","openLock","fontSize","typography","marginBottom","transform","lock","scoreContent","paddingRight","block","blockRed","borderColor","blockYellow","blockGreen","blockBlue","blackText","useStyles","fiveXLocked","filter","value","length","capitalizedColor","charAt","toUpperCase","slice","Grid","container","direction","justifyContent","alignItems","item","xs","key","className","map","selected","i","isLock","clsx","grey","scoreContainer","marginRight","border","scoreTop","borderBottom","scoreBottom","stop","reset","history","minusIcon","strike","strikeEmpty","strikesContainer","strikesLabel","strikesLabelX","dark","flexGrow","flexShrink","blockWhite","strikesScore","totalScore","StrikesRow","onReset","onEndGame","strikes","showStrikes","showFinal","justify","wrap","icon","faCircleStop","faRedo","faTrophy","faMinus","scoring","diceIndex","blankState","Array","fill","blueScore","disabledDice","endGameDialogOpen","greenScore","redScore","showBlue","showGreen","showRed","showYellow","yellowScore","QuixxScoreCard","cloneDeep","handleClick","index","toggleDisabled","numMarks","element","lastIndexOf","setState","handleClickStrikes","handleReset","e","skipConfirm","confirm","savedState","localStorage","getItem","JSON","parse","removeItem","this","addEventListener","setItem","stringify","getTotalScore","handleRecordScore","won","scores","push","Date","toISOString","game","Dialog","fullScreen","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Component","withStyles","cardSubTitle","display","disclaimer","margin","fiveXTop","borderTopLeftRadius","borderTopRightRadius","float","fiveXBottom","borderBottomLeftRadius","borderBottomRightRadius","borderTop","height","marginTop","paddingBottom","React","memo","createMuiTheme","darker","ReactDOM","render","ThemeProvider","Theme","CssBaseline","App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.02b98495.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport OpenLockIcon from '@material-ui/icons/LockOpenOutlined';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = (color) => makeStyles((theme) => {\n  const { blue, green, red, yellow } = theme.palette;\n\n  return ({\n    marks: {\n      backgroundColor: theme.palette[color].main,\n      padding: theme.spacing(),\n      paddingLeft: `env(safe-area-inset-left)`,\n    },\n    number: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(),\n      marginLeft: theme.spacing(),\n      padding: theme.spacing(),\n    },\n    numberContent: {\n      textAlign: 'center',\n      width: '100%',\n    },\n    liveNumber: {\n      backgroundColor: theme.palette[color].light,\n      color: theme.palette[color].main,\n    },\n    disabledNumber: {\n      backgroundColor: 'transparent',\n      color: 'black',\n    },\n    disabledNumberContent: {\n      textDecoration: 'line-through',\n    },\n    x: {\n      fontWeight: 'bold',\n      color: 'black',\n    },\n    square: {\n      borderRadius: theme.spacing(),\n    },\n    circle: {\n      borderRadius: theme.spacing(20),\n      [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(),\n      },\n    },\n    openLock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n      transform: 'rotate(45deg)',\n    },\n    lock: {\n      fontSize: theme.typography.fontSize,\n      marginBottom: -4,\n    },\n    scoreContent: {\n      paddingRight: theme.spacing(2),\n    },\n    block: {\n      backgroundColor: 'white',\n      cursor: 'pointer',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n    },\n    blockRed: {\n      borderColor: red.main,\n      backgroundColor: red.light,\n      color: red.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockYellow: {\n      borderColor: yellow.main,\n      backgroundColor: yellow.light,\n      color: yellow.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockGreen: {\n      borderColor: green.main,\n      backgroundColor: green.light,\n      color: green.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blockBlue: {\n      borderColor: blue.main,\n      backgroundColor: blue.light,\n      color: blue.light,\n      paddingRight: `env(safe-area-inset-right)`,\n    },\n    blackText: {\n      color: 'black',\n    },\n  });\n});\n\nexport default function ColorRow(props) {\n  const {\n    score,\n    onClick,\n    revealScore,\n    color,\n    reverse = false,\n    row,\n    showScore,\n  } = props;\n  const [marks, disabled] = row;\n  const classes = useStyles(color)();\n  const fiveXLocked = marks.filter(value => value).length < 5;\n  const capitalizedColor = color.charAt(0).toUpperCase() + color.slice(1);\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs key='0' className={classes.marks}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent='center'\n          alignItems='center'\n        >\n          {marks.map((selected, i) => {\n            const isLock = i + 1 === marks.length;\n\n            return i < 10\n              ? <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i)}\n                >\n                  <div className={clsx(classes.numberContent, disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? <span className={classes.x}>X</span>\n                      : reverse\n                        ? marks.length - i\n                        : i + 2\n                    }\n                  </div>\n                </Grid>\n              : <Grid\n                  item\n                  xs\n                  key={color + i}\n                  className={clsx(classes.number, classes.square, disabled[i] && !selected ? classes.disabledNumber : classes.liveNumber)}\n                  onClick={() => onClick(color, i, isLock)}\n                >\n                  <div className={clsx(\n                    classes.numberContent,\n                    !fiveXLocked && disabled[i] && !selected && classes.disabledNumberContent)}>\n                    {selected\n                      ? isLock\n                        ? <LockIcon className={classes.lock} />\n                        : <span className={classes.x}>X</span>\n                      : isLock\n                        ? <OpenLockIcon className={classes.openLock} />\n                        : reverse\n                          ? marks.length - i\n                          : i + 2\n                    }\n                  </div>\n                </Grid>;\n          })}\n        </Grid>\n      </Grid>\n      <Grid item xs={1} key='1'\n        className={clsx(\n          classes.block,\n          classes[`block${capitalizedColor}`],\n          showScore && classes.blackText\n        )}\n        onClick={() => revealScore(`show${capitalizedColor}`)}\n      >\n        <div className={classes.scoreContent}>{score}</div>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faRedo, faCircleStop, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => {\n  const { grey } = theme.palette;\n\n  return ({\n    scoreContainer: {\n      marginRight: theme.spacing(2),\n    },\n    score: {\n      backgroundColor: 'white',\n      border: `2px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing(),\n      paddingLeft: theme.spacing()/2,\n      paddingRight: theme.spacing()/2,\n      fontSize: 18,\n    },\n    scoreTop: {\n      borderBottom: `1px solid ${theme.palette.grey.main}`,\n      textAlign: 'center',\n      padding: theme.spacing(0.75),\n    },\n    scoreBottom: {\n      padding: theme.spacing()/2,\n      textAlign: 'center',\n    },\n    stop: {\n      color: 'white',\n      marginRight: theme.spacing(2),\n    },\n    reset: {\n      color: 'white',\n      marginRight: theme.spacing(2),\n    },\n    history: {\n      color: 'white',\n      marginRight: theme.spacing(2),\n    },\n    minusIcon: {\n      color: 'white',\n      marginLeft: theme.spacing(30),\n    },\n    strike: {\n      backgroundColor: 'white',\n      border: `1px solid ${theme.palette.grey.main}`,\n      borderRadius: theme.spacing()/2,\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      padding: `5px ${theme.spacing(1.9)}px`,\n    },\n    strikeEmpty: {\n      color: 'White',\n    },\n    strikesContainer: {\n      width: \"100%\",\n    },\n    strikesLabel: {\n      fontSize: 18,\n      textAlign: 'center',\n    },\n    strikesLabelX: {\n      fontWeight: 'bold',\n      color: 'red',\n    },\n    block: {\n      backgroundColor: 'white',\n      border: `2px solid ${grey.dark}`,\n      borderRadius: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      cursor: 'pointer',\n      flexGrow: 1,\n      flexShrink: 0,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      width: 64\n    },\n    blockWhite: {\n      color: 'white',\n    },\n    blackText: {\n      color: 'black',\n    },\n    strikesScore: {\n      marginRight: theme.spacing(3),\n    },\n    totalScore: {\n      marginRight: theme.spacing(1.5),\n    },\n  });\n});\n\nfunction StrikesRow(props) {\n  const { onClick, onReset, onEndGame, strikes, showStrikes, showFinal, revealScore, strikesScore, totalScore } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid container justify='space-between' alignItems='center' wrap='nowrap' className={classes.row}>\n      <Grid item className={classes.strikesContainer}>\n        <Grid container spacing={1} justify='space-around' alignItems='center' wrap='nowrap'>\n          <FontAwesomeIcon icon={faCircleStop} className={classes.stop} onClick={onEndGame} />\n          <FontAwesomeIcon icon={faRedo} className={classes.reset} onClick={onReset} />\n          <FontAwesomeIcon icon={faTrophy} className={classes.history}/>\n          <FontAwesomeIcon icon={faMinus} className={classes.minusIcon}/>\n          {strikes.map((strike, i) => (\n            <Grid item\n              key={i}\n              onClick={() => onClick(i)}\n            >\n              <div className={clsx(classes.strike, !strike ? classes.strikeEmpty : null)}>\n                X\n              </div>\n            </Grid>\n          ))}\n          <Grid item \n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.strikesScore,\n              showStrikes && classes.blackText,\n            )}\n            onClick={() => revealScore('showStrikes')}\n          >\n            {strikesScore}\n          </Grid>\n          <Grid item \n            className={clsx(\n              classes.block,\n              classes.blockWhite,\n              classes.totalScore,\n              showFinal && classes.blackText\n            )}\n            onClick={() => revealScore('showFinal')}\n          >\n            {totalScore}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default StrikesRow;","import React, { Component } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, useMediaQuery } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport ColorRow from './components/ColorRow';\nimport StrikesRow from './components/StrikesRow';\n\nconst scoring = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];\nconst styles = (theme) => ({\n  cardSubTitle: {\n    color: theme.palette.grey.main,\n    display: 'inline-block',\n    fontWeight: 'bold',\n    flexGrow: 1,\n  },\n  disclaimer: {\n    textAlign: 'center',\n    margin: `${theme.spacing(2)} auto`,\n    fontSize: 14,\n  },\n  fiveXTop: {\n    border: '1px solid',\n    borderBottom: 0,\n    borderTopLeftRadius: theme.spacing(2),\n    borderTopRightRadius: theme.spacing(2),\n    display: 'inline-block',\n    float: 'right',\n    fontSize: 14,\n    marginRight: theme.spacing(0.75),\n    textAlign: 'center',\n    width: 130,\n  },\n  fiveXBottom: {\n    border: '1px solid',\n    borderBottomLeftRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    borderTop: 0,\n    display: 'inline-block',\n    float: 'right',\n    height: theme.spacing(),\n    marginBottom: theme.spacing(),\n    marginRight: theme.spacing(0.75),\n    marginTop: -theme.spacing(2),\n    width: 130,\n  },\n  game: {\n    backgroundColor: '#282c34',\n    height: '100%',\n    paddingBottom: `env(safe-area-inset-bottom)`,\n  },\n});\n\nconst diceIndex = { red: 2, yellow: 3, green: 4, blue: 5 };\nconst blankState = {\n  blue: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  blueScore: 0,\n  disabledDice: new Array(6).fill(false),\n  endGameDialogOpen: false,\n  green: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  greenScore: 0,\n  red: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  redScore: 0,\n  showBlue: true, \n  showFinal: true,\n  showGreen: true, \n  showRed: true, \n  showStrikes: true,\n  showYellow: true,\n  strikes: new Array(4).fill(false),\n  strikesScore: 0,\n  yellow: [\n    new Array(12).fill(false),\n    [false, false, false, false, false, false, false, false, false, false, true, false]\n  ],\n  yellowScore: 0,\n}\n\nclass QuixxScoreCard extends Component {\n  state = cloneDeep(blankState);\n\n  componentDidMount() {\n    // if there is a saved state, reload it\n    let savedState = localStorage.getItem('QwixxState');\n    if (savedState) {\n      savedState = JSON.parse(savedState);\n      localStorage.removeItem('QwixxState');\n      this.setState(savedState);\n    }\n    \n    // save the state if the user navagates away or refreshes\n    window.addEventListener('pagehide', () => {\n      console.log('saving state');\n      localStorage.setItem('QwixxState', JSON.stringify(this.state));\n    });\n  }\n  \n  /**\n   * Handles clicks for the colored number rows\n   * @param {String} color The color of the row\n   * @param {Number} index The index of the clicked square\n   * @param {Boolean} isLock Whether or not the square clicked is a lock\n  */\n  handleClick = (color, index, isLock) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n\n    // if disabled do nothing\n    if (disabled[index]) {\n      return;\n    }\n\n    // Disable a dice if a lock is marked\n    // really means toggle the state of both lock and dice when they are in the state\n    // this must be done before marks is modified\n    if (isLock && (\n      (!marks[index] && !disabledDice[diceIndex[color]]) ||\n      (marks[index] && disabledDice[diceIndex[color]])\n    )) {\n      this.toggleDisabled(color);\n    }\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const numMarks = marks.filter(value => value).length - (marks[11] && !marks[10] ? 1 : 0);\n    const score = scoring[numMarks];\n\n    // disable all before the index and enable all after\n    disabled = disabled.map((element, i) => {\n      // Check lock section first, then check the rest\n      return (i === marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n    });\n\n    this.setState({\n      [color]: [marks, disabled],\n      [`${color}Score`]: score,\n    });\n  }\n\n  /**\n   * Handles clicks for the strike row \n   * @param {Number} index The index of the Strike that was clicked\n   */\n  handleClickStrikes = (index) => {\n    const marks = this.state.strikes;\n\n    // mark the square\n    marks[index] = !marks[index];\n\n    // calculate new score\n    const score = marks.filter(value => value).length * 5;\n\n    this.setState({\n      strikes: marks,\n      strikesScore: score,\n    });\n  }\n\n  handleReset = (e, skipConfirm) => {\n    if (skipConfirm || window.confirm('Are you sure you want to reset the card?'))\n    {\n      this.setState(cloneDeep(blankState));\n    }\n  }\n\n  toggleDisabled = (color) => {\n    const { disabledDice } = this.state;\n    let [marks, disabled] = this.state[color];\n    const index = diceIndex[color];\n\n    // toggle the specified dice\n    disabledDice[index] = !disabledDice[index];\n\n    // disable or enable the entries of a row\n    if (disabledDice[index]) {\n      disabled = disabled.map(() => true);\n\n      // don't disable the lock if it is marked\n      if (marks[marks.length - 1]) {\n        disabled[disabled.length - 1] = false;\n      }\n    } else {\n      const numMarks = marks.filter(value => value).length;\n      disabled = disabled.map((element, i) => {\n        // Check lock section first, then check the rest\n        return (i >= marks.length - 2 && numMarks < 5) || i < marks.lastIndexOf(true);\n      });\n    }\n\n    this.setState({ \n      disabledDice,\n      [color]: [marks, disabled],\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    // const theme = useTheme();\n    // const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const {\n      red,\n      yellow,\n      green,\n      blue,\n      blueScore = 0,\n      greenScore = 0,\n      redScore = 0,\n      showBlue,\n      showGreen,\n      showRed,\n      showYellow,\n      showFinal,\n      showStrikes,\n      strikes,\n      strikesScore = 0,\n      yellowScore = 0,\n      endGameDialogOpen,\n    } = this.state;\n\n    const getTotalScore = () => redScore + yellowScore + greenScore + blueScore - strikesScore;\n  \n    const handleLoss = (e) => handleRecordScore(e, false);\n    const handleWin = (e) => handleRecordScore(e, true);\n\n    const handleEndGame = () => {\n      this.setState({endGameDialogOpen: true});\n    };\n    \n    const handleRecordScore = (e, won) => {\n      this.setState({endGameDialogOpen: true})\n      const scores = JSON.parse(localStorage.getItem(\"QuixxHistory\") || '[]');\n      scores.push({\n        'date': (new Date()).toISOString(),\n        'score': getTotalScore(),\n        'won': won,\n        'state': cloneDeep(this.state),\n      });\n      localStorage.setItem('QuixxHistory', JSON.stringify(scores));\n      this.handleReset(e, true);\n    };\n\n    return (\n      <Grid\n        className={classes.game}\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showRed}\n          score={redScore}\n          color='red'\n          row={red}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showYellow}\n          score={yellowScore}\n          color='yellow'\n          row={yellow}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showGreen}\n          score={greenScore}\n          color='green'\n          reverse\n          row={green}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <ColorRow\n          onClick={this.handleClick}\n          showScore={showBlue}\n          score={blueScore}\n          color='blue'\n          reverse\n          row={blue}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n        <StrikesRow\n          strikes={strikes}\n          onEndGame={handleEndGame}\n          onReset={this.handleReset}\n          onClick={(i) => this.handleClickStrikes(i)}\n          showFinal={showFinal}\n          showStrikes={showStrikes}\n          totalScore={getTotalScore()}\n          strikesScore={-strikesScore}\n          revealScore={(score) => this.setState({ [score]: !this.state[score] })}\n        />\n\n        <Dialog\n          fullScreen={true}\n          open={endGameDialogOpen}\n          onClose={() => this.setState({endGameDialogOpen: false})}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Game Over\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you win?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleLoss} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={handleWin} color=\"primary\" autoFocus>\n              Yes!\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(React.memo(QuixxScoreCard));\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, green, grey, red, yellow } from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n  typography: {\n    fontSize: 28,\n  },\n  palette: {\n    grey: {\n      light: grey[200],\n      main: grey[500],\n      dark: grey[700],\n      darker: grey[900],\n    }, \n    blue: {\n      light: blue[100],\n      main: blue[700],\n    },\n    green: {\n      light: green[100],\n      main: green[700],\n    },\n    red: {\n      light: red[100],\n      main: red[700],\n    },\n    yellow: {\n      light: yellow[100],\n      main: yellow[700],\n    }\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}